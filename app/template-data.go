// Code generated by go-bindata.
// sources:
// templates/404.html
// templates/base.html
// templates/config-base.html
// templates/login.html
// templates/register.html
// templates/settings.html
// templates/shitbucket-import.html
// templates/tag-index.html
// templates/url-edit.html
// templates/url-index.html
// templates/url-new.html
// templates/url-view.html
// DO NOT EDIT!

package app

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templates404Html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x4d\x4f\x03\x21\x10\x86\xef\xfb\x2b\x46\x0e\x9e\xac\xa4\x67\x29\x49\xe3\x41\x8f\xc6\x9b\x47\x0a\xb3\x80\x01\x66\xc3\xc7\xaa\x69\xfa\xdf\x25\xb5\x1b\x57\xd3\x13\x84\x77\x78\xe6\xc9\x7b\x3c\x82\xc1\xd1\x27\x04\xa6\x29\x55\x4c\x95\xc1\xe9\x34\x08\x6e\xfc\x0c\x3a\xa8\x52\x76\x2c\xd3\x07\x93\x03\x80\x58\xbd\xbd\xb7\x78\xa0\x9a\x29\x9d\x93\x9e\x4d\x4b\x12\x50\x19\xa8\xf8\x59\x37\xba\xd3\x30\xff\xdc\x63\xab\x68\x98\x14\x3e\x5a\x28\x59\xef\x18\x2f\x55\x55\xaf\xb9\x8f\xca\x62\xe1\xa5\x8d\x79\x13\xc8\xd2\x7d\x99\x6d\x9f\xe3\xd3\x85\xeb\xb6\x0b\x78\xc5\x64\x72\xff\x0c\x8f\xaf\xfb\x97\x1b\xc1\xdd\xf6\xbf\xc1\x9f\xc1\x37\x6a\x30\x52\x4b\xdd\xc9\x21\xcc\xe4\xcd\xad\xc3\x10\xfc\xf4\xf0\xbb\xe3\xfa\x4f\xa1\xc0\x65\x1c\xbb\x2a\x93\x4f\x04\x8e\x22\xde\xc1\xa1\x19\xf3\x25\xb8\x5a\x0c\xcf\x45\xc9\xe1\x72\xf4\x36\xb1\x6f\xea\x05\x7e\x07\x00\x00\xff\xff\x5f\x72\xda\x3d\x58\x01\x00\x00")

func templates404HtmlBytes() ([]byte, error) {
	return bindataRead(
		_templates404Html,
		"templates/404.html",
	)
}

func templates404Html() (*asset, error) {
	bytes, err := templates404HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/404.html", size: 344, mode: os.FileMode(420), modTime: time.Unix(1455844218, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\xdb\x72\xdc\x36\xd2\xbe\xf7\x53\x20\x54\x2a\xba\xf8\xcd\xa1\x46\x47\x4b\x99\x99\x94\x7f\xc7\xce\xba\xd6\xb5\xbb\x15\x2b\xb9\xdd\xc2\x10\x20\x07\x12\x48\x30\x00\x38\x87\x75\xf9\x39\xf6\x81\xf6\xc5\xb6\x71\xe2\xf0\x34\xd2\x28\xc9\xaa\x8a\x1a\x12\x6c\x7c\x7d\x40\xa3\xd1\xdd\xfc\xf2\x05\x11\x9a\xb1\x92\xa2\xa8\x96\x3c\xae\xb0\xd4\x0c\xf3\x08\x7d\xfd\xfa\x6a\x46\xd8\x1a\xa5\x1c\x2b\x35\x8f\xa4\xd8\x44\x8b\x57\x08\xb5\xc7\x52\xc1\x63\x9e\xc7\xd3\x73\xfb\xa6\xfb\xce\x60\xa5\xa2\xd4\x18\x90\x25\xbc\xb7\x04\x40\xb2\xba\x5c\xf8\x5b\x78\xc0\x68\x25\x69\x36\x8f\x40\x86\xc9\x2f\x3f\x7f\x32\x17\xf0\x8d\x90\xc6\x32\xa7\x7a\x1e\xfd\x73\xc9\x71\xf9\x18\x2d\xc2\xfb\x7b\xa6\x39\x05\x8a\x59\x82\x03\xca\x2c\x31\x88\xe1\xa1\x0a\xec\x35\xdd\xea\xb8\xa8\x35\x25\x08\xf3\x0d\xde\xa9\x78\x23\x71\x15\xed\x79\x03\x24\xcb\x1c\xea\x3f\x24\x5b\x63\x6d\x70\x9b\xb7\x00\xc5\x02\x54\x86\x51\x86\x63\x2e\x52\x10\x64\x96\xb0\x0e\x04\xe5\xea\x99\x79\x4b\x21\x1e\x0b\x2c\x1f\x63\x31\x32\xbb\x24\xed\xc9\x33\x55\x60\xce\x17\x6d\xb0\x96\x81\x24\x5d\x53\xa9\xfc\x2a\xad\x19\xdd\x44\x28\x62\x24\x72\x2a\x7c\xfc\xd1\xd8\xad\xb1\xd3\x07\x21\x0b\xac\x41\xf9\x77\x92\x82\x66\xe4\xad\xee\x1a\xcd\xfc\x7d\x57\x30\x42\x84\xfe\xbe\x35\xd4\x5d\x86\xee\x0b\x30\x16\x53\x3b\x51\xeb\x7a\x49\xdb\x54\x01\x66\xa0\x78\xc6\x78\xe1\x54\x1e\xd1\x34\xe9\xa8\x3a\x4b\xaa\x66\x09\xfd\xba\x7c\xa6\x5a\xb3\x32\x57\x93\xf7\xc5\x92\x92\x5f\x19\xa1\x42\xed\x11\x9e\x90\x27\x40\xb6\x5c\x91\x1a\x88\x58\x52\x55\x89\x52\xb1\x35\x45\xfd\x81\x78\x7a\xbd\xdc\xdd\xb6\x9c\x63\xc6\x32\x89\x0b\x7a\x08\x20\x66\x9a\x16\x11\x52\x32\x9d\x47\x49\xb2\xd9\x6c\x26\x5e\x90\x49\x2a\x8a\xc4\x52\x27\x20\xa2\x1f\x5c\x33\xd2\xf5\x6e\xd0\x5c\x6c\xb2\x9a\x73\x95\x4a\x4a\x4b\x63\x23\xcb\x6e\x6f\x0e\x10\x7e\xf1\x6a\xdc\x4d\xf6\xcf\xaf\x06\x8e\xfc\x17\xac\xee\x71\xde\xb2\x53\x7f\x4d\x34\xce\xdd\x92\x98\x59\x12\x97\x39\x45\xdf\xc2\x18\xba\x9b\x3b\x80\x9f\xa8\xf6\x00\xa3\x9e\x07\xa4\x6d\xcf\x33\x53\x5b\x9e\x67\x1f\xff\x66\xcc\xe6\x7c\xed\x79\xd1\xfb\xf1\x02\xa7\x9a\x81\x85\xdb\x0b\xa1\x2a\x5c\x06\x92\x15\x78\x1a\x2d\xa3\xde\x06\xf1\x2f\x97\xba\x8c\x0e\x6c\x16\x4a\x98\x1e\xd9\x2c\xef\x61\xb8\xb7\x27\x3a\x70\xc8\xc6\x10\x62\xac\x24\x03\xf4\x49\x84\x08\xd6\x38\x1e\x67\x44\x28\xa7\x9a\x0e\x59\xb9\x39\x5a\xe4\x39\xa7\xf3\xa8\x10\xc4\xc4\x57\x37\xe6\x03\xdd\x09\x84\xca\x8c\xc9\x22\x40\x2c\x06\x2b\x27\xb1\x5a\x85\x18\xd2\x91\x1a\xf6\x12\xd8\x68\xc4\x77\x9a\x5b\x7f\xe3\x7f\x5a\xab\xd0\x0a\xfd\x5e\xa8\x5e\xd0\xb7\xa3\xc0\x9e\x80\x52\x8c\x98\x80\xdf\x91\x12\xe2\xf4\x92\x95\x84\x6e\xe7\x51\x3c\x8d\x90\x14\x46\x3d\x02\xa7\x87\xc8\x07\x67\x85\x85\x8a\xdd\x4b\xe4\x1e\x54\x31\x72\x6e\xb8\x57\xe6\xe4\xa0\xa5\x6e\xd6\x7a\x48\xb1\xa2\x20\x95\x3c\xe4\x2a\xed\xa5\x5b\xfc\x68\xa4\x85\x60\x82\x60\x45\x0e\x5a\x6b\x8c\xc7\x52\x90\x5d\x9b\x43\xb5\x78\x2b\xa9\xd9\xd6\x48\xd5\xfe\x66\x83\x4b\x8d\xb4\x40\xce\x22\x48\xaf\x98\x32\x6c\x7e\xb0\x21\xed\x28\x26\x99\x10\xba\xab\xc8\xb2\xd6\x5a\x80\xfb\xed\x2a\x30\xa7\x7b\x88\xda\x7e\x09\x17\xac\x40\x86\x6b\xae\xbd\x1b\x11\xa6\x0a\xd6\x40\x46\x8b\x77\xb8\x4c\x29\x9f\x25\x6e\x72\xe7\xc0\xed\xe3\x58\x1b\xd9\x5b\xf1\xe8\x4d\x45\x3b\xc7\xeb\xf3\xfe\x04\xee\xd4\xf3\xa6\x0c\x98\xac\xac\x37\xed\xe3\xcc\x23\xdd\xbd\x46\xdf\xae\x31\xaf\xa9\xb2\x01\xe7\x83\x21\xa2\xaa\x4b\x55\x50\xa5\x30\xdc\x00\x41\xa0\xed\xf9\x24\xe6\x54\x6a\x64\xff\xc7\x26\xea\x00\xae\xdd\xce\xaf\xf6\x96\x0b\xe9\x09\x17\x8a\xf6\x2d\x64\x27\x46\x8b\xff\xfc\xbb\x6d\x1d\x83\x13\x38\x1b\x76\xfd\x9d\x32\x76\xd7\xd6\x57\x9b\xbc\xc4\xe8\x3b\xfe\x7a\x89\x15\x75\x7b\xeb\x1b\x22\x52\xb3\xae\x68\xa5\x0b\x38\xfe\x66\xee\xc7\xa4\x45\xe0\xce\xde\xcc\x16\x6c\xf1\xf9\x97\x0f\x3f\xdf\x19\xc1\xe0\xa8\xa9\xb8\x49\x4f\x02\x97\x89\x8d\xaf\x8e\xca\xcd\x28\xa8\xc6\xa8\x84\xc8\x3b\x8f\x4c\x78\xae\x04\x68\x88\xfc\x16\x9a\x47\x1b\x46\xf4\x6a\x4e\xe0\x1c\x4a\x69\x6c\x1f\x5e\x23\x56\x32\x93\xe5\xc5\x2a\x05\x7b\xcc\xa7\x61\x1f\x72\x56\x3e\xba\x48\x77\xba\xd2\xba\xba\x4b\x92\x0c\x50\xd4\x24\x17\x02\x42\x17\xae\x98\xb2\x27\x5c\xaa\xd4\x0f\x19\x2e\x18\xdf\xcd\xff\x5e\xd1\xf2\xff\x3e\xe3\x52\xdd\x5d\x9e\x9d\xbd\xbe\x70\x17\xd3\x98\xb3\xf4\xf5\x65\xb8\x3b\x85\x30\xc9\xe7\xa7\x4a\xef\x38\x85\x25\xa7\xfa\xd4\x39\xf7\xa9\xd9\xa6\x06\xed\xb4\xcd\xdf\xf9\x7d\x78\x15\xd9\xb9\xd1\x7e\x6e\x08\xc5\x89\xd2\x58\xb3\xd4\xd0\x24\x90\x64\x69\x05\x21\xb2\x9a\x14\xac\x9c\x98\x59\x7f\x10\x10\x57\xd5\x00\xe6\x88\x69\xc6\x5a\x31\xde\x50\x25\x0a\x3a\x2a\x8a\xc5\x00\x70\x4e\xe1\x38\xa8\xd3\x55\xcc\x52\xb3\xb9\x15\xfb\x17\x05\xdf\xbc\xba\xd9\x5e\xdd\xf4\x71\x59\x01\x5e\x69\x25\xea\x4c\x8a\x2d\xf1\xa4\x2a\xf3\x17\x30\xb8\x3e\xdb\x5e\x9f\x1d\xcb\xc0\x12\xbf\x90\xc1\xcd\xf9\xf6\xe6\xfc\x58\x06\x96\xf8\xa5\x0c\xae\xb7\x37\xd7\x47\x33\x30\xc4\x2f\x64\x30\x9d\x5e\x6e\xe1\x3a\x96\x85\x27\x7f\x29\x93\xf3\xb3\x2d\x5c\x47\x33\x71\xe4\x2f\x65\x72\x09\xa2\x5d\x1e\xaf\x89\x23\x7f\x29\x93\xab\xf3\x2d\x5c\x47\x33\x71\xe4\x2f\x65\xf2\x06\xf4\x7f\x73\xbc\xb9\x1c\xf9\x38\x13\x07\xec\x42\x82\x05\x48\x0c\xd9\x38\x72\x86\xd7\x16\xf0\xe2\x7c\x7b\xe1\x64\x0e\x12\xd9\x91\x3f\x06\x8e\x4b\x22\x05\x23\x71\xba\x92\x10\x2d\xe2\xe9\x2d\x58\xe6\xb6\xcb\xc5\x8f\xfd\x39\x4a\xdc\x5e\x6f\x6f\xaf\x3b\xf0\x76\xe4\xcf\x01\x9f\x5e\x6f\xa7\x5d\x70\x3b\x32\x04\x2f\x70\xc9\x32\xaa\x06\xd1\xd3\xe3\x85\xd7\x93\x07\x25\xca\xb1\xd9\xea\xd1\xbb\xc6\xe8\x74\x85\x33\x2c\x59\x5c\xb1\xb2\x84\x82\x0d\xb2\xd3\x89\x5a\xe7\xe6\x28\xe4\x42\x42\x92\x7d\xb5\x5c\x62\x72\x35\x12\xd4\x57\x70\x62\xa6\xb5\x46\x4f\x40\x7b\x4d\x27\xf0\x2f\x1a\x1e\xbb\x85\x32\x5e\xc8\x52\x6c\x0a\x98\xf8\x9e\x71\xfa\xce\xf0\x6c\x9d\xc2\x27\x04\x5f\x5d\x9c\xa7\x47\xcd\xfd\x68\x58\xb6\xe6\xf6\x8d\xa4\x34\x10\x8d\x6d\xd8\x83\xa8\x36\x71\xcf\x0f\x43\x2e\xa5\xd8\x28\x2a\x1d\xd9\x64\x5b\xf0\x11\x44\xbd\xa2\xe0\xa7\x69\x5f\xaf\xcc\xfe\xb9\xfc\x2b\x09\x69\xcc\xcc\xa4\xce\x1e\xe2\x9b\x38\x46\x1f\xd8\x96\x12\xc0\x59\x2f\xb1\x44\x71\xdc\x4a\xfb\x4d\x59\xa1\x45\xd5\x24\xb8\x9e\xc6\xfd\x84\x34\x37\x3c\x66\x06\x26\x36\xe4\x63\xf9\x74\xbb\xdd\xd4\x64\xbc\xad\xf7\x1e\x64\x50\x39\x3c\x93\x72\xfb\x69\xae\x7c\xeb\xd5\x72\x60\x0d\x8e\xab\x26\xcb\x0c\xe5\xdc\xc4\xcf\x69\x5e\xb7\x99\xf5\x4a\x15\xbb\x7f\x80\xd8\x94\x76\xed\xda\xe4\x7f\x47\x3a\xac\x0b\xda\x95\x41\x55\x73\x1e\x73\x9a\x69\x04\x95\x9a\x38\x54\x53\xdb\xb2\x2f\xb2\x89\xf7\x8c\x15\x39\x5a\x51\x96\xaf\x40\xf3\x8b\x37\xa1\x2f\xd2\xdb\x99\x75\x26\x63\x03\xe8\x76\x24\xe6\x40\x6b\x52\x5c\xc7\xa4\x5f\xd1\xb6\x0a\xa6\x41\xc7\xd1\x1a\x14\x3d\x65\xe0\x59\xcd\x5b\x6b\x17\x48\xe1\xa7\xb7\x0c\x26\xeb\x37\x2d\x87\xb5\x2d\x37\x26\x6f\xed\xed\x3d\x5e\x76\x7b\x5f\xce\x83\x3b\x03\x36\x78\x2c\x9a\x16\xc9\xc9\xb0\x5c\x27\x50\xda\x2c\x05\x96\x64\x5f\xb0\xcf\x12\xce\x16\x3d\x98\x12\x0a\xc7\x40\x89\x76\x54\x37\x5b\xa3\xc3\x09\x04\x65\x19\xa2\xbf\x35\xd2\x9a\x15\x50\xd1\xd7\xaf\xa1\x22\xb2\xa3\x91\x2f\xc4\xf6\x72\x25\x43\xb9\x38\x53\x90\xa0\x42\xdd\xf8\xa4\x58\xa3\x3c\x35\xce\x8f\xe0\xd9\x6f\x17\x75\xfc\x64\xd0\x8c\x52\xbe\x1b\x65\x9a\x4e\x63\xc2\xcc\x92\x9a\x1f\xb5\xb2\xe1\x56\x1a\x2f\x1c\x2e\xb3\x69\x90\x7d\x82\x2d\x4b\xc9\xc7\x72\xb0\xba\xed\xa5\xec\xbb\x79\x69\x9a\x5d\x63\xc2\x57\xbc\x0e\xc2\xbf\x25\xc4\x75\x16\xc6\x8c\x69\x4c\xe9\x27\xc2\x71\x5f\x11\xb1\x29\xa3\x81\xb9\xf7\x8e\xd4\xa7\x1d\x8f\x3a\x0d\x92\x6f\xb9\x84\x80\x05\x67\x1f\x8e\x57\x58\x55\xa2\xaa\x2b\x08\xab\xb2\xa6\x7e\x90\x6e\x21\x06\x10\x4a\x8c\xf8\xdc\x6c\x17\xdb\xea\x85\x88\x3f\x79\x5f\x60\xc6\x41\xc5\x6e\xf8\x48\xb1\xa4\xba\x89\x1d\xbd\x2e\x59\x6f\x25\x1a\x59\x0b\x5a\xd6\x03\xe5\x9e\x30\xb0\xf2\x3d\x5e\x67\xe1\xd0\xf1\x3d\xe4\x94\xce\x96\x4e\x61\x45\x2b\x2c\xb1\xb6\x07\x91\x17\x82\xad\x99\x8d\xea\x07\xa7\x8e\xcb\x60\xc2\x4f\xad\x9d\x04\x9f\xec\xfd\xc1\x4d\xd1\xf3\x45\x33\xd2\xa7\x1a\x76\xba\xf7\x0e\x58\x0a\xfd\x3b\x9c\x10\xe4\x63\x65\x23\x1e\x2b\xc7\xa5\x1b\xe3\xdb\x95\xd7\xc5\x54\x13\xc9\x12\x73\x38\x35\x81\xb3\x15\x71\xc6\x5a\x3d\x87\x0e\xd8\xd0\x0d\x3c\xd8\xa4\x33\x9f\x86\xb6\x6a\xff\x69\x68\x6f\x87\xe6\x23\x4e\xab\xaf\x16\x66\x71\x38\x9a\xd1\xa1\x4f\x37\x5f\xbe\xb8\xa9\xa6\xfb\x51\x3d\xf5\x1d\xa5\xd3\x34\xf1\xad\xa8\xc9\x41\x82\xa0\x45\x9b\xe4\x80\x29\x5c\xab\xae\x09\x04\xdd\xc6\xdd\xb3\x99\xc8\xd8\xb7\xa9\xe6\xb0\xed\xec\x9b\xef\x52\x51\xed\xbe\x47\x7f\xdd\x81\x9d\xee\xa9\x94\x3b\xb4\xff\xca\x12\x9c\xc4\xf4\x67\xd4\x5d\x92\xe4\x4c\xaf\xea\xa5\x6d\xcb\x3c\xee\x4c\xf3\x0e\xc8\xed\x69\x3b\x8c\x59\x8e\xd4\x47\xad\x9f\xec\x83\xed\xd3\xff\x0e\xf0\x84\x29\x55\x53\x88\x80\x1f\xed\xef\x01\x98\x13\x9b\xa9\xfd\x3f\x4e\x1f\x4d\x8b\x14\x1e\xba\x74\xb0\xa0\xcd\x67\x9e\x5f\xc1\xdd\x21\x51\xed\x7c\x23\x1a\xeb\xa0\xce\x12\x67\x76\xf7\xd4\x59\x48\xdf\xc2\x6e\x96\x71\xa6\x52\xc9\x2a\xed\xd2\x91\xa0\x11\x7e\xc0\xdb\x7e\x3b\xcb\x8c\xc1\x96\x5a\xaa\xe4\xe1\xb7\x9a\x82\x86\xd3\xc9\x74\x3a\x39\xf7\x4f\xb6\x8f\xf3\x60\x83\xbd\x03\x5c\x0c\xd1\x43\xb2\xf3\xd0\x6f\x45\x0d\xe7\x0d\x4f\xa3\x43\x48\xa6\x07\xd5\x99\xdf\xf5\xf4\xb6\xbf\xf9\xe6\xde\x56\xa1\x35\x53\x6c\xc9\xcd\xad\x99\x38\xba\x8b\x3d\xb1\x2a\x1a\x62\x55\x3c\x47\x5c\x90\x86\xb8\x20\xcf\x11\xf3\xbc\x21\xe6\x79\x8b\x18\xf2\x4e\x5b\x15\x40\x99\x60\xdb\x9e\x7b\x7d\xfe\x1b\x00\x00\xff\xff\xc0\xfe\xd9\xe4\x84\x1e\x00\x00")

func templatesBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesBaseHtml,
		"templates/base.html",
	)
}

func templatesBaseHtml() (*asset, error) {
	bytes, err := templatesBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/base.html", size: 7812, mode: os.FileMode(420), modTime: time.Unix(1456013728, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x5d\x6e\xdb\x38\x10\x7e\xf7\x29\x66\xb9\x01\xfc\xb0\x96\x18\x67\xf3\x14\x48\x5a\x60\x1f\xb2\x58\xf4\xa1\x40\xd3\x1e\x60\x2c\x8d\x6c\x3a\xd4\x4f\xc5\xb1\x13\x23\xc8\x39\x7a\x86\x9e\xa0\xef\xed\xc5\x3a\xa4\x2c\x2b\x76\x52\x34\x40\x00\x5b\x1a\x92\xdf\x7c\x33\xfa\xf8\x91\x0f\x0f\x50\x50\x69\x6a\x02\x55\x5a\x74\x2b\x05\x8f\x8f\x13\x00\x99\xee\xb0\x5e\x12\x9c\xdd\xd2\x6e\x06\x67\x5b\xb4\x1b\x72\x70\x95\x42\x7c\xed\x61\x12\x9f\xe0\x2a\x72\x0e\x25\x10\xc8\x80\x0e\x08\x80\xa4\x30\x5b\xc8\x25\xcb\xa5\x0a\x2d\x75\x0c\xe1\x19\x49\xae\x67\x17\x98\xca\x02\x50\xa0\x8b\x0d\x73\x53\x0f\xe8\xdc\x36\x8e\x14\x14\xc8\x18\x15\xc6\x55\xe6\x40\xa1\xb2\x1f\x5f\x12\xdd\xa3\x87\x64\xcf\x37\x74\x31\x94\xd6\x52\x3b\xeb\xfb\xa4\xba\x38\xf4\xbc\x8f\xc7\x68\xf2\x44\x07\x36\x6c\xc9\xeb\xf0\xf2\xf2\x02\x5d\x58\x9d\x24\x7f\x14\x4d\xce\xbb\x96\x60\xc5\x95\xcd\x26\x49\xff\x92\xaa\x2b\xc2\xa2\xef\x2a\x09\x64\xd9\xcd\xa7\xeb\x0f\xbe\x2e\x53\xd5\x5a\xe4\xb1\x48\x2c\x44\x89\xee\x41\x7d\x42\x45\x8c\x50\x63\x45\xa9\xda\x1a\xba\x6b\x1b\xf9\x58\xc8\x9b\x9a\xa9\xe6\x54\xdd\x99\x82\x57\x69\x41\x5b\x93\x53\x14\x06\x33\x30\xb5\x61\x83\x36\x72\xb9\x48\x93\xce\xf7\x62\x26\xd6\xd4\xb7\xb0\xea\xa8\x4c\xa7\x2b\xe6\xf6\x4a\xeb\x52\x58\x5c\xbc\x6c\x9a\xa5\x25\x6c\x8d\x8b\xf3\xa6\xd2\xb9\x73\xff\x94\x58\x19\xbb\x4b\xdf\xb7\x54\xff\x75\x83\xb5\xbb\xba\x3c\x3f\x9f\xfd\xdd\xff\x0d\xa3\x35\xf9\xec\x72\x88\xa6\xd0\x91\x4d\xa7\x8e\x77\x96\xc4\x07\xc4\x53\xf0\x1a\xa4\x53\xa6\x7b\xf6\x6c\xd3\xa7\xf5\xc3\x92\x1a\x96\x54\xc8\x55\x63\xae\xea\x1b\x54\xda\x31\xb2\xc9\x3d\x46\x2f\x9a\x86\x1d\x77\xd8\xc6\x95\xa9\x63\x9f\xf5\x46\x42\x6c\xdb\x67\x34\xaf\x48\xf3\x6a\x45\x78\x47\xae\xa9\xe8\xa8\x95\x44\x0f\xfb\x9b\x2c\x9a\x62\x97\x3d\x33\xb9\xdf\x2d\x14\xaf\x74\x0a\x4c\xd1\x0f\x65\xf3\x46\x93\x1f\x41\x6d\x74\xef\xa2\xf9\xc5\x61\x15\x8e\x7d\xb2\x3f\x94\xf1\xe0\xe8\x67\x80\x81\xfd\x29\xe4\x60\xfb\x43\xd8\xc7\xa5\x48\x4b\xdd\x50\xbb\x1f\xfd\xa2\xad\xe1\x0b\xc6\xb6\x92\x76\x58\xf5\xea\x47\xd5\x86\xa9\x80\x10\xe6\x52\xff\x08\xfa\xfd\x2b\xbc\x13\x69\xe1\x23\x75\xdd\x6e\x9c\xfd\x36\x72\xe1\x5e\x70\xef\x4c\x27\xd6\x5c\x1a\x5e\x6d\x16\xc1\x90\xb7\x92\xc9\x3e\x51\xbb\x4d\x29\xac\x89\x39\x34\x8c\x50\x62\xd4\x43\x65\x5e\x9b\x0c\xfe\x0b\x83\x44\x63\xf6\xb6\x32\x5a\xae\x16\xb9\xb2\x54\xf6\x7f\x78\xff\x96\xf0\x4f\x6e\x5a\x95\xfd\x8b\xb9\x38\xb2\x91\x5f\x7b\x94\x91\xe8\x36\x7b\x69\x2b\x7a\xc5\xf7\x23\x97\x77\xa6\x65\x70\x5d\x3e\xf6\x87\x6b\xbc\x3f\x3d\xa0\x7e\x4e\x5b\xb3\x70\x7a\xfd\x79\x43\xd2\xef\x3c\x9e\xcf\xe3\x8b\xfd\x28\x38\x73\xed\xbc\x1c\x3d\xe1\x0b\xec\x83\xab\xd7\xa7\x87\xeb\xf5\x79\xfe\x0c\x9d\xa2\xe5\xfe\x0d\xf6\x97\xf3\x10\x2e\xbe\xf1\xba\xfc\x19\x00\x00\xff\xff\xac\x4a\x10\x82\x55\x06\x00\x00")

func templatesConfigBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigBaseHtml,
		"templates/config-base.html",
	)
}

func templatesConfigBaseHtml() (*asset, error) {
	bytes, err := templatesConfigBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config-base.html", size: 1621, mode: os.FileMode(420), modTime: time.Unix(1455843986, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\xcb\x8e\xdb\x30\x0c\xbc\xe7\x2b\x04\xdd\xb5\x46\x5b\xa0\x27\x3b\xe8\xa5\xb7\x02\x5d\xa0\xfd\x01\x45\xa2\xbd\x42\x29\x51\x90\xe8\x6c\xb6\x8b\xfc\x7b\xe9\x47\xe2\x04\x45\x2e\xed\xc1\xb0\x28\xce\x90\x33\x84\xf8\xfe\xae\x3c\xf4\x21\x81\xd2\x1c\x18\x41\xab\xf3\xf9\x1b\x0d\x21\x49\x02\x92\x97\x68\x77\x03\x71\x94\x18\x12\x4f\xa0\x5d\xeb\xc3\x51\x39\xb4\xb5\x76\xba\xd0\xab\xde\xef\x94\x6a\xf3\xe5\x06\xc1\x7a\xc5\x70\x62\xe3\x84\x00\x65\x39\xc7\x91\xc1\xeb\x7d\x1b\xe2\xa0\x6a\x71\x9d\x6e\x2a\x5b\x0e\xae\x09\xd1\x0e\x50\x9b\x3a\xf6\xc5\x20\x0d\xf4\x54\x8f\x83\xe0\x9a\x3c\x57\xbd\xe9\xe4\x08\xcd\xa9\x9a\x0f\x1f\xd5\x74\x8a\xde\x7c\xbe\x1c\xa8\xef\x2b\xb0\xf9\x34\x0b\x11\x52\x4f\x25\x2a\xeb\x38\x50\xea\xb4\x78\x28\x70\x84\x52\xc5\x04\x4e\xf6\x26\x0b\x5a\x45\xe0\x17\xf2\x9d\x7e\xfe\xfe\xe3\xe7\xca\x9b\x98\x01\xd0\x4b\xad\xcb\xc5\xbd\x82\xa9\xae\x19\x0a\x8d\x59\x6f\x00\x81\xa0\x3d\x00\x2a\xc9\x76\x1a\xa2\x0d\xa8\x37\xc9\x89\x8b\x68\x9c\x01\x7a\xff\x75\x4a\xb6\xcd\x1c\xdd\x15\x08\x29\x8f\x7c\xd7\x65\x65\xaa\x39\x63\x70\xd0\x2a\xf8\x6b\x75\x7e\xcb\x70\x0d\x92\x8d\x5b\x90\xd1\x3a\x78\x21\xf4\x20\x5a\x7e\xbd\x21\x7c\x81\x93\x8d\x19\xe1\xc9\x51\xd4\xca\x8e\x4c\xce\xe6\xc0\x16\xc3\x6f\x61\x25\x4a\x70\x63\xa5\x6d\xc4\xec\x3f\x5b\xcf\x02\x7c\xa5\xe2\x1f\xb9\x7f\x5e\xf3\x8f\x07\x30\x59\xfc\xab\xca\x83\x71\x2c\x33\xd8\xd0\xcb\x18\xae\xf1\x7f\x99\x3a\x8c\xcc\x94\xd6\x16\x75\x3c\xc4\xc0\x57\x39\x07\x4e\x4a\x3e\x23\x7b\x61\x47\x64\xbd\x9f\x57\xa6\x6d\x16\xce\x83\xb6\x6d\x73\xff\xb0\x24\x96\xd6\xf3\x03\x5f\x60\xeb\x6f\xdb\xbc\x3f\x01\x00\x00\xff\xff\xb2\x60\x15\xab\x9d\x03\x00\x00")

func templatesLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginHtml,
		"templates/login.html",
	)
}

func templatesLoginHtml() (*asset, error) {
	bytes, err := templatesLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login.html", size: 925, mode: os.FileMode(420), modTime: time.Unix(1455844022, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x4d\x93\xdb\x36\x0c\xbd\xe7\x57\x60\x74\xae\xd6\x4d\xcf\xb6\xa7\xd3\xce\xf6\xd8\x7a\xba\x69\xee\x94\x08\x49\xa8\x29\x52\x43\x42\xf6\x3a\x99\xfc\xf7\x82\xd4\x87\x3f\x93\xec\xb6\xde\x5e\x34\x22\xf9\x08\x02\x0f\x78\x24\x3e\x7f\x06\x8d\x15\x59\x84\x8c\x89\x0d\x66\xf0\xe5\xcb\x13\x72\xdf\xc9\x02\x5a\x2d\xa3\x77\x27\x90\xd2\x59\x46\xcb\x11\xf4\x0e\x60\xa9\x69\x07\xa5\x51\x21\xac\x32\xef\xf6\xd9\x5a\xe6\xce\x67\x4b\x67\xf2\xe7\x90\xbf\xff\x69\x5c\x93\xd5\x6e\x5a\x33\xa8\x34\x30\x3e\x73\x5e\x8a\x49\xf4\xc3\x7f\xdb\x33\xea\x6c\xbd\xa4\xb6\x86\xe0\xcb\x55\xb6\x08\xac\x98\xca\x05\xb5\xaa\xc6\xb0\x08\x7d\xe5\x73\xe3\x6a\xf7\x10\x76\xb5\xe0\x16\xdd\xb5\x65\x65\xd0\x33\xa4\x6f\x4e\xb6\x72\x10\x8f\xca\xd6\x1f\x1a\x0a\x60\x9c\xdb\xca\x97\xb6\x08\x0a\x2c\xee\x81\xac\x1c\x60\x4b\x04\x57\xc1\xd3\x5f\xbf\xfd\xf9\x00\x1b\x81\x07\x04\x8f\x35\x85\xe8\xd7\xc1\xf5\x1e\x94\x6e\xc9\x42\x1f\x64\xac\x84\x16\x21\xa2\xa2\xba\xf7\x08\xdc\x88\xa5\xae\x33\x54\x8a\x9b\xce\x42\x81\xc6\xed\x1f\x4e\xfd\xaa\x9c\x6f\x27\xd7\xe2\x7f\xde\x38\x4f\x9f\x84\x49\x65\x32\x50\x65\xdc\xb5\xca\x84\x64\x8f\x3b\xf4\x61\x60\x59\x8c\x47\x92\x33\x68\x91\x1b\xa7\x57\xd9\xe6\x8f\xa7\x0f\x33\x89\xd1\x28\xa1\xd1\x01\xf9\x38\x75\xce\x7c\x3a\xa8\xf6\xae\xef\xb2\x53\x88\x80\x8c\x12\x17\x41\xd6\x57\x19\xb6\x8a\xc4\x87\xcb\x64\x41\xfc\x6b\x75\x1e\x7f\x2c\x7b\x19\xa4\x3d\xd9\xfa\x31\xe2\x97\x8b\x34\xba\xb0\x7a\x2b\xe9\x93\x9d\xf7\x3f\x5e\xf8\x20\x78\xb2\x5d\xcf\x67\xce\x8e\x67\x65\x40\x7a\xf6\x8c\x0f\x1d\xce\x03\xab\xda\xe3\xa0\x33\xaa\xc4\xc6\x19\x8d\x12\xc7\xf6\x60\xf0\x67\x7c\x56\x6d\x67\xf0\xa1\x74\xad\xd0\xda\xb3\x2b\x55\x47\xc2\x31\x7d\x92\x5d\xd6\x59\xbc\x24\x62\x21\x3e\x9f\xd1\x77\x35\xf1\x5a\x3e\x3b\x81\xee\x9d\xd7\xaf\xa0\x74\x33\x6e\xb9\x27\xab\x91\xc0\x2b\x57\xce\x39\x1e\x88\x3d\x82\x06\x6e\xe7\xf1\x77\x98\x92\xa9\xd0\x29\x9b\x0e\x6a\xd0\x74\xbf\x18\x57\x6e\xbf\x1e\xb4\xab\x2a\xa9\x54\x89\x3d\x62\xf3\x22\x81\xd7\xbf\x3b\x08\x72\xcd\x50\xd2\x52\x60\xaf\xc8\x72\xf8\x01\xfe\xee\x03\x47\x99\x89\x3a\x6b\xe7\x34\x84\x78\x37\x44\x79\x8a\x0a\xa1\x94\x33\x3d\xb6\xd8\x16\xe8\x45\x62\xd1\x87\xbb\x25\xf0\xc5\x19\xfb\x48\x81\x0a\x32\xc4\x87\xfb\xe4\xec\xf4\x12\x55\x9a\xdc\x15\x62\x72\xf1\x7a\xfe\x2c\xe3\xbb\xd9\xaf\xbc\xeb\x0b\xb9\x8f\xa6\x2c\x0f\x56\xc7\x14\x1f\x51\x19\xec\x94\xe9\x63\xd6\x47\x74\xd9\x60\xb9\x45\x7d\xeb\x98\x4d\x82\x5c\xfb\x75\x8b\x80\x9b\xf5\xf2\x46\x71\x7a\xda\x29\xc6\x17\x07\x3a\xc2\x6f\x46\x38\xac\xfd\xb7\x10\xbf\x21\x8a\xd3\xd2\x7f\xb4\xaa\x30\x08\xa3\x3b\xf3\x0b\x14\x80\xaa\x54\xe6\x7b\x65\x19\xd8\x41\x43\x1a\x21\x3e\x0a\x07\x6e\xc8\xd6\x50\x79\xd7\xa6\xf7\x66\xc8\xd8\x0d\x05\xdc\xfb\x56\x7b\xb1\x28\x7e\x1d\x1a\x03\x78\x14\x69\x6a\x2d\xce\xde\x5d\x1b\xa9\x3a\x0b\xf7\xfc\x6f\xcb\x26\x5e\x1a\xba\x6b\x1c\xbb\x30\xd5\xcb\x6c\x72\x7e\x5a\x8e\x90\x5b\xd6\x52\x70\xb0\x49\x80\xbb\x69\xe1\x2e\x71\xed\xa4\x52\xbe\x13\xd7\x08\xf9\x7a\x5c\x1f\x13\xe0\xff\x11\xc0\x54\x25\x30\x36\x94\xb0\x27\x63\xa4\x63\x93\xd6\x09\x3a\x2a\x59\x1a\xab\x90\xfa\xac\xc1\xeb\x28\x86\x02\x21\x49\xda\x44\xc1\x0c\x3d\x59\x6c\xd7\xa0\x42\xd4\x6f\xaa\x84\x6f\xd5\xec\xf4\xb2\x5d\x57\x6e\xd1\x33\x4b\x37\x38\x24\x24\xf4\x45\x4b\x3c\x53\x51\xb0\xb4\x89\x6c\x73\xe9\xaa\x55\x6f\x38\xa9\x67\xe8\x26\x97\x8b\x61\xdf\xeb\x22\x59\x2e\x2e\xbb\x41\x99\x91\x78\xc6\x7e\x7c\x02\x8f\x3f\xc7\xc6\xfe\x9f\x00\x00\x00\xff\xff\xdb\xbb\x21\xd0\xfc\x0b\x00\x00")

func templatesRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesRegisterHtml,
		"templates/register.html",
	)
}

func templatesRegisterHtml() (*asset, error) {
	bytes, err := templatesRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/register.html", size: 3068, mode: os.FileMode(420), modTime: time.Unix(1456013608, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSettingsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x4f\x73\xeb\x26\x10\xbf\xbf\x4f\xb1\xa3\xe9\x55\x4e\xd3\x77\xeb\x38\x3e\xa4\x79\x6d\xdf\x29\x99\x38\xcd\x1d\xc4\xda\xa2\x41\xa0\x02\xb2\xe3\x7a\xfc\xdd\xbb\x20\xc9\x96\x64\xc7\x7f\x9a\xbc\xc9\x21\x0e\xec\xfe\x80\xdf\xfe\x15\xac\xd7\x20\x70\x26\x35\x42\xe2\xa5\x57\x98\xc0\x66\xb3\x5e\x8f\x9e\xc2\x38\x8c\x00\xb5\x20\xd1\x97\x0e\x2e\x33\xda\xa3\xf6\x49\x23\xfe\x69\xae\x0c\x67\x0a\x7e\xbd\x81\xd1\x14\xbd\x97\x7a\xee\x5a\x95\x6b\xe7\x5d\xe5\x3d\xff\x1b\x33\x1f\x20\x63\x21\x17\x90\x29\xe6\xdc\x4d\x62\xcd\x32\x99\x7c\x01\xe8\xca\x32\xa3\xd2\x57\x97\x5e\xff\x12\x35\x7d\x5d\x8b\x1f\xca\x87\x6b\x86\xfa\x92\x69\x54\x10\x7f\x53\xa9\x67\xa6\x03\x3b\x00\x4c\x73\x64\x82\x48\xf7\x50\x84\xcb\xbf\xf6\x61\xb5\xef\x26\xb7\x95\x54\x02\xbe\xd3\xb6\xb6\x60\x5e\x1a\x3d\xbe\xca\xbf\xf6\x0e\xb8\xa2\x13\x8e\x9f\xc8\x8d\x58\x0d\x8f\xf3\x8c\x2b\x6c\x61\xf5\x24\xfe\xa6\x14\x0b\x81\xda\xa1\x18\xac\x08\x6b\xec\x50\x14\x84\x62\x32\x76\xde\x1a\x3d\x9f\x3c\xa3\x75\x91\x61\x33\x1f\x5f\x91\xf2\xe0\x8a\xf5\xba\x89\xf1\xa8\x59\xb3\xd9\x1c\x02\x93\x6c\xef\xc8\x93\x2c\x1e\x71\x21\xcf\xa3\xd1\x9a\xcf\xd4\x92\xad\x5c\xba\xb4\xac\x4c\x3a\xd4\xa2\xeb\xff\x90\xfe\x4f\xe6\xf2\x0f\xe4\xf7\x24\x0b\xbc\xc8\x45\x91\x47\x58\xf5\x81\x24\xee\x98\x67\x70\x27\x2d\x95\x8d\xb1\xab\x8b\xe8\x84\xa5\xb4\xf2\x5c\x32\x24\x09\x79\x75\x24\x65\x7b\xd3\xce\xa4\x3b\x0c\xe9\xdf\x86\x2b\x8c\xd3\xdc\x58\xf9\x2f\xb5\x0d\xa6\x12\x60\x59\x28\x8c\x9b\x84\xfa\x83\xc5\x05\x25\x14\xb5\x94\xb6\x4f\x84\x9e\x92\x40\x81\x3e\x37\xe2\x26\x79\xb8\x9f\x3e\x1d\xac\xf1\xb8\xe7\xdc\x9a\xaa\xec\x16\xb9\x62\x9c\x2a\x7b\xd8\x06\x20\x8c\x0a\x91\x86\x81\x26\xbf\xa9\x34\xe2\x92\xc9\x33\xe5\x1d\x97\x4a\x7a\x72\x68\x14\x1d\xee\x17\x7b\x1b\x5d\xff\xfc\x66\xcb\xb0\xd4\x2b\xcc\xb0\x76\x07\x7b\x37\x52\xa9\xcb\xca\x83\x24\x2b\x17\x5b\x1e\x69\x59\x71\x25\xb3\x04\xfc\xaa\xc4\x76\x37\xd0\xac\xc0\x2e\x2a\x81\x05\x53\x15\x89\x5a\x34\x39\x52\xce\x00\xff\xd9\xb5\xdb\xd1\xce\x36\xd8\xc2\x36\x9b\x2c\xc7\xec\x05\xc5\x7a\x4d\x3d\x7d\xb3\x99\xc0\x80\xd3\x43\x04\x0e\xd2\x61\x8f\xfd\xd1\x0e\xf6\x6e\x07\x58\xb9\x60\x1e\xcf\xf6\x40\x0b\x3f\xe5\x82\x16\xb7\xe7\x83\xa1\x0b\x6a\xe0\xe5\x3e\x70\xd4\xbb\x5b\x27\xe4\xa8\xca\x94\x2b\x93\xbd\x24\x93\x6f\x3a\x36\xeb\x86\x00\x48\xed\x3c\xd3\x19\xba\x40\x77\x65\x2a\x58\x32\xed\xc1\x1b\xc8\xa5\x40\x08\xd5\xb0\xf2\x39\xd1\x87\x99\x35\x05\xf8\x9c\x56\xc6\xa0\x8c\xa8\xe6\xe9\x84\xd3\x55\xf8\x03\xea\xe4\xb7\xfa\x73\x0f\xdf\x0a\x8e\x22\x7c\x0b\xcf\x2a\x97\xeb\x33\xca\x25\xc6\x82\x9b\xd7\x4b\x13\x06\x03\x93\x32\x37\xde\xb8\x36\x53\xb6\x5b\x35\xc9\xd2\x83\xd4\xd9\xb1\x4b\x8d\x68\xc9\x43\x54\x9e\xcc\x88\x88\x85\x1a\xfc\xae\xd2\x78\x97\xb1\x0b\x4a\x8f\x13\xc6\xb6\x90\x83\xc6\x3e\x47\xe5\x99\xc6\xd6\xe0\x0f\xac\x81\x36\x71\xa0\xb9\x39\xc2\x52\x2a\x05\x4c\x29\xb3\x84\x52\x66\xbe\xb2\x54\x10\x8c\xee\x99\xb5\x0d\xa1\x1e\x38\x42\xac\x77\x15\x6a\x26\x54\x8a\x85\xe9\x5f\xbf\x3f\xc2\x0c\x51\x7c\x66\x31\x7c\x2f\x4a\x63\xfd\xfb\x2a\xa0\xec\x31\x6a\x0f\xa0\xc6\xe0\xa9\x4d\x0f\xb2\x83\x41\x6e\x71\x36\xf8\x58\xe6\xd2\xf3\x8a\xc2\xe8\x53\x19\xe9\xc4\xaf\x66\x43\xad\xee\x1c\xd3\x2d\x64\x7c\xc5\xfa\x51\x2b\x3f\xc5\x6f\xb7\x2c\x7b\xa9\x4a\xf7\xb9\x8e\x13\x74\x17\xe2\xcc\x61\xca\x23\x9b\xda\x6d\x35\x33\xb8\x6b\x74\xc7\xfc\x75\x24\xc7\x1f\xd1\xd1\xd5\x0c\x77\x7d\xfb\xee\x16\xea\x53\x80\xaf\xc8\x9e\x72\x15\xf2\x3f\x28\x66\x32\xe6\x34\xe5\xf8\x38\x33\x02\x0f\x5f\xd5\xa2\xe6\x7f\xe6\xf9\xfe\x03\xe8\xc2\xd0\xbe\x79\xf9\x71\x45\x27\xc4\x66\x36\xa3\x1e\x93\xd6\x73\x35\xdf\xce\xfb\x21\xe3\x95\xf7\x46\x37\x7d\xcb\x55\xbc\x90\x94\xad\xcd\xe6\xdc\x6b\xa0\xbf\x94\xde\x95\xac\x52\x3e\x99\x4c\xd9\x82\xfc\x5f\x2f\x99\x50\x04\x77\xb8\xe4\x40\x34\x2b\x1b\x1e\x70\x02\x5f\xeb\x38\x66\xe1\xbb\xaa\x7a\xe1\x7b\xfb\xaa\x1a\x0c\x8f\x8f\xcd\x5a\xd8\xfc\xdb\xbd\x76\xff\x0b\x00\x00\xff\xff\x75\x5f\x3f\x21\x16\x0f\x00\x00")

func templatesSettingsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSettingsHtml,
		"templates/settings.html",
	)
}

func templatesSettingsHtml() (*asset, error) {
	bytes, err := templatesSettingsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/settings.html", size: 3862, mode: os.FileMode(420), modTime: time.Unix(1455435507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesShitbucketImportHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x52\xc1\x8e\x1b\x21\x0c\xbd\xe7\x2b\x2c\x2e\x3d\x4d\x50\x7b\xac\x32\x39\x54\xbd\x54\xaa\xd4\xaa\xbb\xfd\x00\x06\xbc\x3b\x68\x19\x8c\xc0\x6c\xb3\x8d\xf6\xdf\x6b\xc8\x74\x92\x1c\x46\x63\xfc\xcc\x7b\x7e\xc6\xe7\x33\x38\x7c\xf2\x11\x41\xb1\xe7\x80\x0a\xde\xdf\xcf\xe7\xfd\x63\x8b\x5b\x04\x18\x9d\xa4\x76\x37\x75\x96\x22\x63\xe4\x56\xb9\x3b\x38\xff\x0a\x36\x98\x52\x46\x95\xe9\x8f\x3a\xee\x00\x6e\x73\x96\xc2\x70\x2a\xc3\xc7\x4f\x1d\x11\xec\x89\xf2\x02\xc6\xb2\xa7\x38\x2a\x21\xcd\xf8\x8a\xb9\x08\x6b\x99\x3d\x4f\xd5\xbe\x20\x0f\x7e\x49\x94\x3b\xbf\x82\x05\x79\x26\x37\xaa\x9f\x3f\x1e\x1e\x57\x8e\x7b\x85\x46\x38\x3c\x67\xaa\x69\x83\xa5\x20\x98\x09\x03\x08\x36\xaa\x9a\x83\xba\xb6\x13\x39\x4b\x4b\x1d\x56\xc7\x87\x4d\x13\x7e\xff\xfa\x7e\xd0\x3d\x7d\xc3\xe2\x63\xaa\x7c\x27\xb4\x12\x28\xf0\xae\x33\x0f\xa5\x4e\x8b\x97\x5e\xf9\x2d\xe1\xa8\x18\x4f\x12\x47\xb3\xe0\xaa\x9b\x82\xb1\x38\x53\x70\x28\x9d\xcc\xcc\xa9\x7c\xd6\xfa\x6a\x75\x8f\x27\xb3\xa4\x80\x7b\x4b\x8b\x36\xc9\x6b\xb9\x54\x14\x98\xca\x64\xe5\xc8\x26\xf8\xbf\x42\x15\x29\xe2\xad\xbb\x92\x4c\xec\x1d\xcc\x18\xd2\x97\x40\xf6\x65\x73\xd8\x32\xc3\xd4\x53\xc7\xaf\x14\x3f\x70\x1b\xc2\xb3\x18\x64\x02\xe3\x1c\x98\xf8\x06\x93\x29\xde\x36\x91\x19\x6c\x46\x57\x1a\xc6\x33\x5e\x66\xd0\xb8\xb7\x39\x6b\x19\xf4\x76\x98\x2a\x33\xc5\xd5\xe9\x7f\xdf\xab\xec\xc4\x11\xe4\x1b\x64\x47\x4c\x0d\xac\x8e\xdf\xfa\x1b\x1e\xf4\xe5\xd2\xfa\xf8\xba\xcd\xb0\xaf\xc8\x85\x78\xfd\x5d\xb7\xec\x5f\x00\x00\x00\xff\xff\x99\x01\x3c\x28\x8e\x02\x00\x00")

func templatesShitbucketImportHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesShitbucketImportHtml,
		"templates/shitbucket-import.html",
	)
}

func templatesShitbucketImportHtml() (*asset, error) {
	bytes, err := templatesShitbucketImportHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shitbucket-import.html", size: 654, mode: os.FileMode(420), modTime: time.Unix(1455259370, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTagIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x50\xbb\x4e\xc4\x30\x10\xec\xf3\x15\xab\x15\x05\x14\xc9\x09\x4a\x94\xa4\x81\x06\x09\x5d\x81\xe0\x03\x4c\xbc\xe7\xb3\x64\xd6\x92\xbd\xe4\x0a\x2b\xff\xce\xda\xba\x88\xab\xac\x79\x78\x66\xec\x52\xc0\xd2\xc9\x33\x01\x8a\x97\x40\x08\xdb\xf6\x69\x5c\x56\x9e\xd8\x2a\xe8\x6e\x1c\x4b\x64\x21\x96\xea\xe9\x46\xeb\x57\x58\x82\xc9\x79\xc2\x14\x2f\x38\x77\x00\xb7\xdc\x12\x43\x1f\x5c\xff\xf8\xd4\x14\x80\x52\x92\x61\x47\x70\x27\xc6\xc1\xf3\x04\x43\x6d\xd1\x9c\xaa\x8d\x66\xbf\xf5\x2d\x8c\x70\x4e\x74\x9a\x50\x7b\x13\xad\x94\x72\x9d\x66\x5c\xbf\x7a\xba\x20\xa0\xb7\xd8\x32\x86\xb7\x57\x9d\x81\xb3\xda\x1a\x3c\x9a\x1f\x52\x02\xee\x4b\x69\xf8\xeb\xe3\xfd\x25\xfe\xb2\x6c\xdb\xc3\x78\x30\xfb\x06\x0a\x99\xae\xa5\xc7\x28\x67\xcf\x6e\xd8\x15\xb6\x4d\x18\x0f\xfa\x88\xb9\xbb\x1e\xff\xdf\xf0\x17\x00\x00\xff\xff\x1d\xd1\x06\x3d\x29\x01\x00\x00")

func templatesTagIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTagIndexHtml,
		"templates/tag-index.html",
	)
}

func templatesTagIndexHtml() (*asset, error) {
	bytes, err := templatesTagIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tag-index.html", size: 297, mode: os.FileMode(420), modTime: time.Unix(1455259161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlEditHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\xc1\x6e\x1b\x21\x10\xbd\xe7\x2b\x46\xa8\xd7\xb5\x9b\x1e\x2b\xdb\x87\x2a\x69\x55\xa9\x52\xa3\x26\xed\x9d\x65\xc7\xde\x51\x58\x40\xc0\x3a\x76\x2c\xff\x7b\x07\xbc\xde\xee\x3a\x49\xd3\xc8\x3d\x58\x86\x99\x07\x6f\x78\x6f\x16\x76\x3b\xa8\x70\x49\x06\x41\x44\x8a\x1a\x05\xec\xf7\xd7\x15\x45\x32\x2b\xe0\xdc\xe4\xe7\x8f\x6f\x93\xbb\x94\xe0\x38\xcf\xd1\x54\x3c\xb8\x18\xac\x52\xd6\x44\x34\x51\x74\xe1\x77\xad\xd7\xf0\x71\x9e\x17\xa6\xd0\xac\xa2\x35\x28\x2d\x43\x98\x0b\x6f\x1f\xc4\xe2\x02\x60\x18\x53\x56\x17\x9b\x50\x5c\x7e\xc8\x19\xce\x2d\xad\x6f\x8e\xc9\x34\x2e\x6a\xeb\xe9\x91\x49\xa4\x16\x20\x55\x24\x6b\xe6\x82\x89\x3c\xae\xd1\x07\x2e\x80\x09\x8b\x20\xd7\x5c\xb9\xa0\x4a\xe4\x02\x26\x5f\xaf\x98\x5b\x40\x83\xb1\xb6\xd5\x5c\xdc\x7c\xbf\xbd\xeb\xf6\x1f\xb3\x67\x82\x95\xb7\xad\xeb\xd3\x0c\xd0\xb2\x44\x0d\x9c\x9b\x1f\x35\x39\x2d\x16\xd2\xa8\xa9\x8a\x34\x30\xd1\xf3\x24\xaf\x11\x8b\x2c\xd5\x6c\x9a\x67\x83\x1d\x9f\x3b\xf0\x71\x8f\xcb\xf7\x03\x6e\xc6\x92\x71\x6d\x04\xaa\x4e\xc9\x73\xad\x1d\x9d\x80\xb8\x75\xc8\x08\xdc\xb0\xf2\x46\x36\xd8\xa3\xd7\x52\xb7\x98\x14\xca\x42\xe4\x7a\x92\x14\x4e\x4b\x85\xb5\xd5\x15\xf2\xa9\xae\x37\xb2\x71\x6c\x69\xf2\x28\x23\x86\xa7\x9f\x72\xb1\xbd\x56\xa3\xc9\x9b\x84\x93\xab\xf0\x16\xdd\x18\xfe\xdf\x64\x1b\x52\xbf\xaa\x5a\x06\xf7\xa2\x1d\xda\xe7\x0b\xc6\x54\xd0\x67\xeb\xaf\x28\xb0\x72\x5b\x78\x22\xa1\xb2\x0d\xf3\xa1\x2f\x82\x22\x34\x0a\x41\x33\x12\x52\x94\x34\xf7\x25\xb7\x6a\x1b\xad\x92\x8e\xb8\x6f\xe9\x91\xf7\x36\xd6\xbc\x28\x33\x4f\x83\x93\x26\x57\x5f\xa3\x76\x9f\xb4\x55\xf7\x2f\xab\x67\x97\xcb\x80\x91\x45\x4c\xd8\xa2\xcc\xe0\xac\x20\x34\x6d\x88\x50\x22\x04\x74\xd2\xcb\x88\x15\x94\x5b\x90\xc0\x9b\x2b\xee\xca\xc4\x71\x96\xb3\xff\x6c\xe7\x2f\x0a\x54\x92\xa6\xb8\x3d\xcf\xd4\x21\xb6\x46\x75\x5f\xda\xcd\x08\x70\xac\x6c\x1c\x1b\x75\x83\xf3\xb4\x66\x25\x8e\xde\xf7\xdb\x74\xfe\xf7\x69\xf6\x9e\x96\x07\xfb\x6f\x0e\x31\x36\x3d\xa3\xb1\xda\xed\xf8\xde\xdb\xef\x4f\x59\x3a\xdc\xb8\x9e\xd3\xf3\x3e\xb1\xfa\xef\x66\x0f\x2d\x3d\xd6\x61\x8d\x66\x17\x9d\xd3\x84\x01\x1e\x6a\x34\x10\x6b\x84\x95\xb6\xa5\xd4\x6c\x75\xcc\x97\x35\x05\x70\x6d\xa9\x49\x4d\xc6\x46\x9f\xf7\x45\xbf\x68\x56\x68\x9e\x69\xc8\xb1\x79\x65\x1b\xa3\x35\x9d\xee\xa1\x2d\x1b\x8a\xfd\x31\xcb\x68\x80\x7f\x05\xbf\x22\xb2\xd5\x51\x2c\x6e\xf9\x06\x9f\x4d\x0f\x4b\x16\x33\x39\xc0\x09\xa8\x3d\x2e\x9f\xde\xf9\x64\x2a\xdc\xa4\x67\x47\x2c\x94\xe4\x2f\x50\xcf\xa6\xf2\xf5\x43\xcf\xa6\xe9\xa0\xf9\x15\x3a\x04\xbb\xbf\x3f\x6f\xdb\xef\x00\x00\x00\xff\xff\xd1\xf3\x8f\xb9\x12\x07\x00\x00")

func templatesUrlEditHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlEditHtml,
		"templates/url-edit.html",
	)
}

func templatesUrlEditHtml() (*asset, error) {
	bytes, err := templatesUrlEditHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-edit.html", size: 1810, mode: os.FileMode(420), modTime: time.Unix(1456013690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x51\xb1\x6e\xdb\x30\x10\xdd\xfd\x15\x0f\x44\x86\x76\xb0\x8c\x76\x2c\x64\x0d\xed\x14\x20\x2d\x8a\x36\x2d\xd0\x91\xa1\xce\xf2\x21\x14\x29\x90\x94\x1d\xc0\xd0\xbf\xf7\x44\x49\x09\x33\x49\xef\xee\xf1\xde\xbd\x77\xb7\x1b\x5a\x3a\xb1\x23\xa8\xc4\xc9\x92\xc2\x34\x49\x8d\x4f\xa8\xee\xe3\xa3\xee\xfe\x32\x5d\x97\x52\x25\xa8\xfa\xa1\x7b\x5a\x20\xd9\x48\xd3\xf4\x9d\x1d\xf7\xda\x72\x4c\x6c\xf0\xd5\xfb\xe7\x5e\x87\x67\x76\xdd\x4c\x70\xed\xca\xcc\x3f\xbb\x42\xc9\x78\x97\xc8\xa5\x59\x6b\x57\xb7\x7c\x81\xb1\x3a\xc6\xa3\x0a\xfe\xaa\x9a\x1d\x50\xd6\x8c\xb7\xfb\x97\xb8\xff\xf4\x39\x77\x80\xdb\x6d\xde\xed\x9b\x1f\x5d\x92\xd7\xc0\x52\xc3\x5d\xa4\x94\x44\x38\xe2\xcb\x11\xd5\xef\x0d\xbc\xa3\x58\xdf\x75\xd4\xb2\xcb\x94\x87\x0c\xee\x5d\x49\x09\xda\x75\x84\xbb\x31\xd8\x4c\xf9\xf3\xeb\xa1\x98\x90\x67\x88\xf6\x07\x1f\x8a\x51\x33\x59\x92\xfa\x39\x3e\x59\x36\x1f\x4b\x76\xe6\x27\xea\x07\xab\x93\x78\x16\xde\x7e\xd0\x21\xb1\xb6\x0a\x8e\xae\x39\x83\x97\x04\x25\x2a\x6a\xd1\x54\xdb\xda\xaa\xb0\xf3\x4e\x5f\xa2\x2c\x1d\xad\xc9\xae\xbd\x7c\x90\xb5\x59\x0f\x5b\x7e\xb3\xc8\xde\x48\xda\x14\x54\xf3\x78\xa6\x40\xe0\x08\xe7\xd3\x59\xc6\x23\xe3\xa7\x31\x21\xb2\x25\x67\xa8\xc2\x3f\x3f\xc2\x68\x07\xee\x07\x1f\x12\x5a\x9d\x34\x4e\xc1\xf7\x90\x17\x14\x10\x29\x5c\xd8\x50\x84\x78\x97\x02\x6a\x8d\x73\xa0\xd3\x51\xc9\x3a\x81\x2e\x14\xa2\x78\x8d\xaf\x3e\xa6\x49\x35\x1b\xaa\x0f\xba\xa9\xea\xc3\xb0\xdd\xf1\x6d\xfd\xfa\x20\x07\x6f\x76\xeb\xe7\xad\xf3\x3f\x00\x00\xff\xff\x65\x88\x31\x13\x9d\x02\x00\x00")

func templatesUrlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlIndexHtml,
		"templates/url-index.html",
	)
}

func templatesUrlIndexHtml() (*asset, error) {
	bytes, err := templatesUrlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-index.html", size: 669, mode: os.FileMode(420), modTime: time.Unix(1456013317, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlNewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x41\x6f\xdb\x3c\x0c\xbd\xf7\x57\x10\xba\x7c\x27\xd7\x6d\x8f\x1f\xec\x1c\x76\x1e\xb0\x62\xeb\x06\xec\x28\xcb\x4c\x4c\x54\x96\x04\x89\x6e\xd3\x06\xfd\xef\xa3\x1d\x27\xb3\x92\x75\x45\xd1\x1d\x82\xc8\xe4\xd3\x23\xf9\x9e\x2c\xef\x76\xd0\xe2\x9a\x1c\x82\x62\x62\x8b\x0a\x5e\x5e\x76\xbb\xcb\xbb\x71\x3d\xae\x00\x5d\x2b\xa1\x8b\x05\xce\x78\xc7\xe8\x78\x44\x5e\x54\x2d\x3d\x80\xb1\x3a\xa5\x5a\x45\xff\xa8\x56\x17\x00\xcb\x98\xf1\xb6\xd8\xa6\xe2\xfa\x66\xca\x48\x6e\xed\x63\x7f\x48\x8e\xeb\xa2\xf3\x91\x9e\x85\x51\x5b\x05\xda\x30\x79\x57\x2b\x29\x16\xf1\x01\x63\x92\x6a\x43\xb4\x45\x1a\x9a\x9e\xa6\x82\x0a\x7a\xe4\xce\xb7\xb5\xba\xfd\xf2\xed\x6e\x26\xcd\x4b\x4e\xac\x9b\xe8\x87\x70\x4c\x0b\xc0\xea\x06\x2d\x48\xae\x1e\x19\xd5\xb2\xbf\xbe\x2d\x6e\xe0\xd8\x28\x8c\xe3\x45\x79\x9a\x76\xa8\xd5\xf7\xaf\x9f\xab\x72\x5a\x2f\xd8\x4e\x26\x14\x86\xeb\x2b\x38\x9d\x75\xc6\x92\x0b\x03\x67\xcd\xcd\x15\x14\x50\x5b\x67\xf3\xf1\x53\xc0\x5a\x31\x6e\x65\xed\x74\x8f\x73\xaf\xc1\x6a\x83\x9d\xb7\x2d\x4a\xf7\x1d\x73\x48\xff\x97\x25\x6e\x75\x1f\x2c\x5e\x1a\xdf\x8b\x70\x03\x7b\xa3\x03\x89\x8a\xf4\x2c\xdb\x9c\x77\xb8\x9c\xbe\x94\x86\x8f\x5a\x65\x0f\xef\x11\x8e\xf5\x26\xbd\x43\xb9\x3b\x81\xff\x0b\xe9\x46\x95\xb2\xd2\xb9\x88\xe7\xa2\xed\xc1\x99\x6a\xa2\x92\x50\x61\x2c\x92\x21\x74\x06\xc1\x52\x0a\x30\x46\xc9\xca\x39\x7b\x9f\x82\xf2\x98\x82\x76\x53\x63\x1d\xda\xf0\xc9\x7a\x73\xaf\xce\x8e\x3c\xcc\xf3\xf9\xf5\x3a\x21\x8b\x52\x23\xb6\x68\x26\xf0\x24\x0e\xf4\x43\x62\x68\x10\x12\x06\x1d\x35\x63\x0b\xcd\x13\x68\x10\x72\x83\x55\x39\xd6\xf8\x90\x69\xaf\x35\x74\xe6\xd4\x0f\x4a\xd4\x90\x25\x7e\x7a\xd3\xaf\x8c\xe8\xfa\x2a\xf7\x6b\x89\xed\xd0\xdc\x37\x7e\x9b\x01\x0e\x9d\xe5\xb1\xcc\xe8\x10\xe9\x41\x94\x38\xd8\x7a\xa4\x99\xad\x3d\xa4\x4f\x19\x6e\xf7\xf1\xbc\xd6\xe9\x2c\x67\x36\xfe\xdd\xc8\xa5\x5d\x33\x3f\x78\x67\xc5\xa1\x10\x2c\x61\x82\xc7\x0e\x1d\x70\x87\xb0\xb1\xbe\xd1\x56\x6c\x64\x26\xb7\x01\x4a\x10\x86\xc6\x92\xb9\xcc\x4d\xfc\xd8\x8b\xf8\xaa\x11\xa9\xff\xc3\x61\xcb\x8d\x69\x06\x66\xef\x66\x4d\x0f\xb7\xcd\x4c\xd6\xb0\x03\xf9\x15\x72\xbd\xeb\xc1\xb2\x5a\xfd\xf4\xc3\x7f\x51\x0e\x65\x47\xfb\x71\x7a\x39\x8b\x7b\x82\x55\xa5\x17\xbb\x14\x74\x11\xd7\xe7\xb7\x35\xb9\x16\xb7\xd3\x65\xbd\x32\x5a\xde\x35\x5b\x95\xfa\x6d\x09\xaa\x72\x1c\x7b\xfa\x7e\xec\x83\xf3\xdf\xef\x4f\xd0\xaf\x00\x00\x00\xff\xff\x02\x87\xa1\x39\xab\x06\x00\x00")

func templatesUrlNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlNewHtml,
		"templates/url-new.html",
	)
}

func templatesUrlNewHtml() (*asset, error) {
	bytes, err := templatesUrlNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-new.html", size: 1707, mode: os.FileMode(420), modTime: time.Unix(1456013467, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\x4b\x0a\x02\x41\x0c\x44\xf7\x9e\x22\x64\xef\x9c\xc4\x95\x9f\x03\x34\x4e\x29\x81\x18\x87\xb1\x44\x61\xe8\xbb\x1b\xbb\x15\x66\xd5\x55\xaf\x8b\x97\x65\x91\x11\x17\x0b\x88\xd2\xe8\x50\xa9\x35\xd9\x70\xda\xef\x86\xe3\x17\xf4\x8e\x18\x33\x6c\x56\xeb\xf3\x3d\x88\xa0\xfe\x30\x71\x9b\xbc\x30\x3f\x9e\xb3\x6f\xa7\x32\xd3\x8a\xab\x04\x5e\x6d\xf8\xa6\x68\x2a\xb5\x89\x45\x0f\x20\x2d\xae\x8f\xec\xff\xd8\x3d\x79\x27\xdf\x4f\x00\x00\x00\xff\xff\xd0\x57\xb0\x99\x95\x00\x00\x00")

func templatesUrlViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlViewHtml,
		"templates/url-view.html",
	)
}

func templatesUrlViewHtml() (*asset, error) {
	bytes, err := templatesUrlViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-view.html", size: 149, mode: os.FileMode(420), modTime: time.Unix(1455258875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/404.html": templates404Html,
	"templates/base.html": templatesBaseHtml,
	"templates/config-base.html": templatesConfigBaseHtml,
	"templates/login.html": templatesLoginHtml,
	"templates/register.html": templatesRegisterHtml,
	"templates/settings.html": templatesSettingsHtml,
	"templates/shitbucket-import.html": templatesShitbucketImportHtml,
	"templates/tag-index.html": templatesTagIndexHtml,
	"templates/url-edit.html": templatesUrlEditHtml,
	"templates/url-index.html": templatesUrlIndexHtml,
	"templates/url-new.html": templatesUrlNewHtml,
	"templates/url-view.html": templatesUrlViewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"404.html": &bintree{templates404Html, map[string]*bintree{}},
		"base.html": &bintree{templatesBaseHtml, map[string]*bintree{}},
		"config-base.html": &bintree{templatesConfigBaseHtml, map[string]*bintree{}},
		"login.html": &bintree{templatesLoginHtml, map[string]*bintree{}},
		"register.html": &bintree{templatesRegisterHtml, map[string]*bintree{}},
		"settings.html": &bintree{templatesSettingsHtml, map[string]*bintree{}},
		"shitbucket-import.html": &bintree{templatesShitbucketImportHtml, map[string]*bintree{}},
		"tag-index.html": &bintree{templatesTagIndexHtml, map[string]*bintree{}},
		"url-edit.html": &bintree{templatesUrlEditHtml, map[string]*bintree{}},
		"url-index.html": &bintree{templatesUrlIndexHtml, map[string]*bintree{}},
		"url-new.html": &bintree{templatesUrlNewHtml, map[string]*bintree{}},
		"url-view.html": &bintree{templatesUrlViewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

