// Code generated by go-bindata.
// sources:
// templates/404.html
// templates/base.html
// templates/config-base.html
// templates/login.html
// templates/register.html
// templates/settings.html
// templates/shitbucket-import.html
// templates/tag-index.html
// templates/url-edit.html
// templates/url-index.html
// templates/url-new.html
// templates/url-view.html
// DO NOT EDIT!

package app

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templates404Html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x4d\x4f\x03\x21\x10\x86\xef\xfb\x2b\x46\x0e\x9e\xac\xa4\x67\x29\x49\xe3\x41\x8f\xc6\x9b\x47\x0a\xb3\x80\x01\x66\xc3\xc7\xaa\x69\xfa\xdf\x25\xb5\x1b\x57\xd3\x13\x84\x77\x78\xe6\xc9\x7b\x3c\x82\xc1\xd1\x27\x04\xa6\x29\x55\x4c\x95\xc1\xe9\x34\x08\x6e\xfc\x0c\x3a\xa8\x52\x76\x2c\xd3\x07\x93\x03\x80\x58\xbd\xbd\xb7\x78\xa0\x9a\x29\x9d\x93\x9e\x4d\x4b\x12\x50\x19\xa8\xf8\x59\x37\xba\xd3\x30\xff\xdc\x63\xab\x68\x98\x14\x3e\x5a\x28\x59\xef\x18\x2f\x55\x55\xaf\xb9\x8f\xca\x62\xe1\xa5\x8d\x79\x13\xc8\xd2\x7d\x99\x6d\x9f\xe3\xd3\x85\xeb\xb6\x0b\x78\xc5\x64\x72\xff\x0c\x8f\xaf\xfb\x97\x1b\xc1\xdd\xf6\xbf\xc1\x9f\xc1\x37\x6a\x30\x52\x4b\xdd\xc9\x21\xcc\xe4\xcd\xad\xc3\x10\xfc\xf4\xf0\xbb\xe3\xfa\x4f\xa1\xc0\x65\x1c\xbb\x2a\x93\x4f\x04\x8e\x22\xde\xc1\xa1\x19\xf3\x25\xb8\x5a\x0c\xcf\x45\xc9\xe1\x72\xf4\x36\xb1\x6f\xea\x05\x7e\x07\x00\x00\xff\xff\x5f\x72\xda\x3d\x58\x01\x00\x00")

func templates404HtmlBytes() ([]byte, error) {
	return bindataRead(
		_templates404Html,
		"templates/404.html",
	)
}

func templates404Html() (*asset, error) {
	bytes, err := templates404HtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/404.html", size: 344, mode: os.FileMode(420), modTime: time.Unix(1455844218, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\xfd\x72\xdc\xb6\x11\xff\xdf\x4f\x81\xd0\x99\xe8\x8f\x9a\xa4\x4f\xd6\x87\xa5\xdc\x5d\xc6\x75\xec\xd4\x53\x4f\x3b\x13\x2b\xf9\xb7\x83\x23\x40\x1e\x24\xf0\x23\x00\x78\x1f\xf5\xf8\x39\xfa\x40\x7d\xb1\xee\x02\x20\x8f\x5f\x67\x9d\x9a\x44\x33\x27\x12\xc0\xe2\xb7\x8b\xdd\xc5\x02\xbb\xfc\xfc\x99\x30\x9e\x8a\x82\x93\xa0\x56\x32\xac\xa8\x32\x82\xca\x80\x7c\xf9\xf2\x6c\xce\xc4\x86\x24\x92\x6a\xbd\x08\x54\xb9\x0d\x96\xcf\x08\xe9\xf6\x25\xa5\x0c\x65\x16\xce\xce\xed\x48\x7f\x0c\xb1\x92\xb2\x30\x14\x90\x15\x8c\x5b\x02\x20\x59\x5f\x2c\xfd\x2b\x34\x28\x59\x2b\x9e\x2e\x02\x90\x21\xfa\xe5\xe7\x8f\xf8\x03\xbe\x01\x31\x54\x65\xdc\x2c\x82\x7f\xad\x24\x2d\x1e\x82\x65\x33\x7e\x27\x8c\xe4\x40\x31\x8f\x69\x83\x32\x8f\x11\xb1\x69\x54\x0d\x7b\xc3\x77\x26\xcc\x6b\xc3\x19\xa1\x72\x4b\xf7\x3a\xdc\x2a\x5a\x05\xcb\xb9\xce\xa9\x94\xcb\x2e\x67\xc5\x37\x5c\x69\xbf\xfc\x8d\xe0\xdb\x80\x04\x82\x05\x8e\xe3\x87\x1f\x51\xa0\x56\x80\xf7\xa5\xca\xa9\x01\xd4\xb7\x8a\x53\x78\xbc\x31\x5e\x1a\xf2\x5d\x2e\x18\x2b\xcd\xf7\xa4\xbf\x16\x6c\x8a\x94\x08\xbd\x2f\x6b\x53\xaf\x78\x77\xac\x9d\x32\x17\x8d\xd8\x29\x25\x29\x0d\x53\x21\x73\x10\x35\x16\xc8\x97\x17\xcc\xf2\xf0\x82\xc7\x55\xbb\x5a\x07\x1d\x7d\xe2\xc6\x88\x22\xd3\xd1\xbb\x7c\xc5\xd9\xaf\x82\xf1\x52\xa3\xf5\xba\x44\x93\xfc\x1b\xa5\x75\xac\xc6\x11\x22\x54\x5c\x57\x65\xa1\xc5\x86\x93\x61\x47\x38\xbb\x5a\xed\x6f\x82\x8e\x0d\x45\xaa\x68\xce\x8f\x01\x84\xc2\xf0\x3c\x20\x5a\x25\x8b\x20\x8e\xb7\xdb\x6d\xe4\x05\x89\x92\x32\x8f\x2d\x75\x0c\x22\xfa\xce\x8d\x60\x7d\x47\x80\x25\x97\xdb\xb4\x96\x52\x27\x8a\xf3\x02\x75\x62\xd9\x1d\xac\x0f\xc2\x2f\x0f\x4b\x75\xca\x1a\xb5\xfb\x0a\x43\x06\x7f\xa3\xfa\x8e\x66\x1d\x3d\x0d\x6d\x60\x68\xe6\x4c\x80\xb3\x14\x2d\x32\x4e\xbe\x85\x3e\x72\xbb\x70\x00\x3f\x71\xe3\x01\x26\x7d\x09\x48\xbb\xbe\x84\x53\x3b\xbe\x64\x9b\xff\x40\xb5\x79\xef\x79\x54\xf4\xe1\xd6\xa2\x89\x11\xa0\xe1\xae\x21\x74\x45\x8b\x86\x64\x0d\x9e\xc5\x8b\xce\xa8\xdd\x6c\x7e\x70\x65\x8a\xe0\x88\xfb\x73\x26\xcc\x84\xfb\xbf\x83\xee\xce\x9e\x1b\xc1\x11\xbb\xdd\x18\x6a\x49\x35\xd0\xcf\x03\xc2\xa8\xa1\xe1\x34\x23\xc6\x25\x37\x7c\xcc\xca\xcd\x31\x65\x96\x49\xbe\x08\xf2\x92\x61\x28\x72\x7d\x3e\x26\x3c\x87\xa8\x92\x0a\x95\x37\x10\xcb\x91\xe5\x14\xd5\xeb\xb0\x74\xd6\xeb\x49\x0d\x9b\x08\x74\x34\xe1\x3b\xed\xab\x7f\xf1\x8f\x8e\x15\x3a\x51\xd2\x0b\x35\x88\x8f\xb6\x17\xd8\x33\x58\x94\x60\x18\x1b\x7b\x52\x42\x48\x5b\x89\x82\xf1\xdd\x22\x08\x67\x01\x51\x25\x2e\x8f\x41\xa0\x2d\xb3\x51\x58\xb5\x50\xa1\x1b\x24\xae\xa1\xf3\x89\x10\xeb\x86\x30\xc8\xf2\xc2\xb4\xb6\x1e\x53\xac\x39\x48\xa5\x8e\xb9\x4a\xd7\x74\xcb\x1f\x51\x5a\x08\x26\x04\x2c\x72\x54\x5b\x53\x3c\x56\x25\xdb\x77\x39\x54\xcb\x37\x8a\xe3\xb6\x26\xba\xf6\x2f\x5b\x5a\x18\x62\x4a\xe2\x34\x42\xcc\x5a\x68\x64\xf3\x83\x0d\x69\x27\x31\x49\xcb\xd2\xf4\x17\xb2\xaa\x8d\x29\xc1\xfd\xf6\x15\xa8\xd3\x35\x82\xae\x5f\xc2\x0f\x2c\x90\xd2\x5a\x1a\xef\x46\x4c\xe8\x5c\xb4\x90\xc1\xf2\x2d\x2d\x12\x2e\xe7\xb1\x9b\xdc\x3b\x9b\x86\x38\x56\x47\xf6\xb5\x7c\xf0\xaa\xe2\xbd\x93\xe8\x71\x7f\x02\x77\x1a\x78\x53\x0a\x4c\xd6\xd6\x9b\x0e\x71\xe6\x81\xef\x5f\x90\x6f\x37\x54\xd6\x5c\xdb\x80\xf3\x1e\x89\xb8\xee\x53\xe5\x5c\x6b\x0a\x2f\x40\xd0\xd0\x0e\x7c\x92\x4a\xae\x0c\xb1\xff\x43\x8c\x3a\x80\x6b\xb7\xf3\xb3\x83\xe6\x9a\x93\x5c\x96\x9a\x0f\x35\x64\x27\x06\xcb\xff\xfe\xa7\xab\x1d\xc4\x69\x38\x23\xbb\xe1\x4e\x99\x7a\xeb\xae\xd7\xe0\x11\x8e\xeb\x9d\x1e\x5e\x51\xcd\xdd\xde\xfa\x86\x95\x09\xda\x95\xac\x4d\x2e\x41\x85\xee\x81\x37\x08\x70\x67\xaf\x66\x0b\xb6\xfc\xf4\xcb\xfb\x9f\x6f\x51\x30\x38\x6a\x2a\x09\xc7\x72\xcb\x25\xb2\xf1\xd5\x51\xb9\x19\x39\x37\x94\x14\x10\x79\x17\x01\x86\xe7\xaa\x84\x15\x12\xbf\x85\x16\xc1\x56\x30\xb3\x5e\x30\x38\x87\x12\x1e\xda\xc6\x0b\x22\x0a\x81\x17\xa2\x50\x27\xa0\x8f\xc5\xac\xd9\x87\x52\x14\x0f\x2e\xd2\x9d\xad\x8d\xa9\x6e\xe3\x38\x05\x14\x1d\x65\x65\x09\xa1\x8b\x56\x42\xdb\x13\x2e\xd1\xfa\x87\x94\xe6\x42\xee\x17\xff\xac\x78\xf1\x97\x4f\xb4\xd0\xb7\x17\x2f\x5f\xbe\x78\xe5\x7e\xc2\x50\x29\x92\x17\x17\xcd\xdb\x19\x84\x49\xb9\x38\xd3\x66\x2f\x39\x98\x9c\x9b\x33\xe7\xdc\x67\xb8\x4d\x11\xed\xac\xcb\xdf\xf9\x7d\x33\x14\xd8\xb9\xc1\x61\x6e\x13\x8a\x63\x6d\xa8\x11\x09\xd2\xc4\x2b\xd8\x43\x1a\x42\x64\x15\xe5\xa2\x88\x70\xd6\xef\x04\xa4\x55\x35\x82\x39\x61\x1a\x6a\x2b\xa4\x5b\xae\xcb\x9c\x4f\x8a\x62\x31\x00\x5c\x72\x38\x0e\xea\x64\x1d\x8a\x04\x37\xb7\x16\xff\xe6\xe0\x9b\x97\xd7\xbb\xcb\xeb\x21\xae\xc8\xc1\x2b\xad\x44\xbd\x49\xa1\x25\x8e\xaa\x22\x7b\x02\x83\xab\x97\xbb\xab\x97\xa7\x32\xb0\xc4\x4f\x64\x70\x7d\xbe\xbb\x3e\x3f\x95\x81\x25\x7e\x2a\x83\xab\xdd\xf5\xd5\xc9\x0c\x90\xf8\x89\x0c\x66\xb3\x8b\x1d\xfc\x4e\x65\xe1\xc9\x9f\xca\xe4\xfc\xe5\x0e\x7e\x27\x33\x71\xe4\x4f\x65\x72\x01\xa2\x5d\x9c\xbe\x12\x47\xfe\x54\x26\x97\xe7\x3b\xf8\x9d\xcc\xc4\x91\x3f\x95\xc9\x6b\x58\xff\xeb\xd3\xd5\xe5\xc8\xa7\x99\x38\x60\x17\x12\x2c\x40\x8c\x64\xd3\xc8\x29\xdd\x58\xc0\x57\xe7\xbb\x57\x4e\xe6\x46\x22\xdb\xf3\xfb\xc0\x69\xc1\x54\x29\x58\x98\xac\x15\x44\x8b\x70\x76\x03\x9a\xb9\xe9\x73\xf1\x7d\x7f\xcc\x22\x6e\xae\x76\x37\x57\x3d\x78\xdb\xf3\xc7\x80\xcf\xae\x76\xb3\x3e\xb8\xed\x19\x83\xe7\xb4\x10\x29\xd7\xa3\xe8\xe9\xf1\x9a\xe1\xe8\x5e\x97\xc5\xd4\x6c\xfd\xe0\x5d\x63\x72\xba\xa6\x29\x55\x22\xac\x44\x51\x40\xc2\x06\xb7\xd3\x48\x6f\x32\x3c\x0a\x65\xa9\xe0\x92\x7d\xb9\x5a\x51\x76\x39\x11\xd4\xd7\x70\x62\x26\xb5\x21\x5f\x81\xf6\x2b\x8d\xe0\x5f\x30\x3e\x76\x73\x8d\x5e\x28\x12\x8a\x09\x4c\x78\x27\x24\x7f\x8b\x3c\x3b\xa7\xf0\x73\x46\x2f\x5f\x9d\x27\x27\xcd\xfd\x80\x2c\x3b\x73\x87\x4a\xd2\x06\x88\xa6\x36\xec\x51\x54\x7b\x71\xcf\x8e\x43\xae\x54\xb9\xd5\x5c\x39\xb2\x68\x97\xcb\x09\x44\xb3\xe6\xe0\xa7\xc9\x70\x5d\xa9\xfd\x73\xf7\xaf\xb8\xb9\xc6\xcc\xf1\xea\xec\x21\xbe\x09\x43\xf2\x5e\xec\x38\x03\x9c\xcd\x8a\x2a\x12\x86\x9d\x6b\x3f\xa6\x15\xa6\xac\xda\x0b\xae\xa7\x71\x8f\xe6\x9a\xdb\x34\x53\x84\x09\x91\x7c\xea\x3e\xdd\xad\xcc\xb4\x37\xde\xce\xb8\x07\x19\x65\x0e\x8f\x5c\xb9\xfd\x34\x97\xbe\x0d\x72\x39\xd0\x86\xa4\x55\x7b\xcb\x6c\xd2\xb9\xc8\xcf\x69\x87\xbb\xcc\x06\xa9\x8a\xdd\x3f\x40\x8c\xa9\x5d\x37\x37\xf9\xf3\x48\xc7\x79\x41\x37\x33\xa8\x6a\x29\x43\xc9\x53\x43\x20\x53\x2b\x8f\xe5\xd4\x36\xed\x0b\xec\xc5\x7b\x2e\xf2\x8c\xac\xb9\xc8\xd6\xb0\xf2\x57\xaf\x9b\xba\xc8\x60\x67\xd6\xa9\x0a\x11\xd0\xed\x48\x2a\x81\x16\xaf\xb8\x8e\xc9\x30\xa3\xed\x24\x4c\xa3\xe2\x9c\x55\x28\xf9\x9a\x82\xe7\xb5\xec\xd8\xae\x21\x85\xc7\xc0\x0c\x78\xeb\xc7\x92\xc3\xc6\xa6\x1b\xd1\x1b\xfb\x7a\x47\x57\x87\x8a\x85\xc7\x03\x0f\xee\x75\xd8\xe0\x71\x28\xb7\x3d\x1f\xa7\xeb\x0c\x52\x9b\x55\x49\x15\x3b\x24\xec\xf3\x18\xe6\x0c\x60\x0a\x48\x1c\x1b\x4a\xb2\xe7\xa6\xdd\x1a\x3d\x4e\x20\xa8\x48\x09\xff\xad\x95\x16\x2d\xa0\x83\x2f\x5f\x9a\x8c\xc8\xf6\x06\x3e\x11\x3b\xc8\x15\x8f\xe5\x92\x42\xc3\x05\x15\xf2\xc6\xaf\x8a\x35\xc9\xd3\xd0\xec\x04\x9e\xc3\x72\x51\xcf\x4f\x46\xc5\x28\xed\xab\x51\x58\x74\x9a\x12\x66\x1e\xd7\xf2\x24\xcb\x36\xaf\x0a\xbd\x70\x6c\x66\x2c\x90\x7d\x84\x2d\xcb\xd9\x87\x62\x64\xdd\xae\x29\x87\x6e\x5e\x60\xb1\x6b\x4a\xf8\x4a\xd6\x8d\xf0\x6f\x18\x73\x95\x85\x29\x65\xa2\x2a\xfd\x44\x38\xee\x2b\x56\x6e\x8b\x60\xa4\xee\x83\x23\x0d\x69\xa7\xa3\x4e\x8b\xe4\x4b\x2e\x4d\xc0\x82\xb3\x8f\x86\x6b\xaa\xab\xb2\xaa\x2b\x08\xab\xaa\xe6\xbe\x93\xef\x20\x06\x30\xce\x50\x7c\x89\xdb\xc5\x16\x74\x21\xe2\x47\xef\x72\x2a\x24\xd6\x74\x7b\xe1\x23\xa1\x8a\x9b\x36\x76\x0c\xaa\x64\x03\x4b\xb4\xb2\xe6\xbc\xa8\x47\x8b\xfb\x8a\x82\xb5\xaf\xf1\x3a\x0d\x37\x15\xdf\x63\x4e\xe9\x74\xe9\x16\xac\x79\x45\x15\x35\xf6\x20\xf2\x42\x88\x8d\xb0\x51\xfd\xe8\xd4\x69\x19\x30\xfc\xd4\xc6\x49\xf0\xd1\xbe\x1f\xdd\x14\x03\x5f\xc4\x9e\x21\xd5\xb0\xe2\xd9\x75\xc0\xa2\x34\xff\x87\x13\x82\x7c\xa2\x68\xc5\x13\xc5\xb4\x74\x53\x7c\xfb\xf2\xba\x98\x8a\x91\x2c\xc6\xc3\xa9\x0d\x9c\x9d\x88\x33\x55\xea\x39\x76\xc0\x36\xd5\xc0\xa3\x45\x3a\xfc\x8a\xb2\xd3\x87\xaf\x28\x07\x3d\xb4\xdf\x3b\x3a\x75\xb5\x66\x96\x84\xa3\x99\x1c\xfb\xca\xf1\xf9\xb3\x9b\x8a\xd5\x8f\xaa\x87\x3a\x58\x7b\xaf\x68\xe2\x4b\x51\xd1\x51\x82\x66\x15\x5d\x92\x23\xaa\x70\xa5\xba\x36\x10\xf4\x0b\x77\x8f\xde\x44\xa6\x3e\xe3\xb4\x87\x6d\x6f\xdf\x7c\x97\x94\xd5\xfe\x7b\xf2\xf7\x3d\xe8\xe9\x8e\x2b\xb5\x3f\x7c\x88\x69\x9d\x04\xeb\x33\xfa\x36\x8e\x33\x61\xd6\xf5\xca\x96\x65\x1e\xf6\x58\xbc\x03\x72\x7b\xda\x8e\x63\x96\x23\xf5\x51\xeb\x27\xdb\xe8\x7f\xe5\x39\x1d\x3c\x16\x5a\xd7\x1c\x22\xe0\x07\xfb\x3c\x02\xf3\xdc\xde\xd4\xfe\x4a\x93\x07\x2c\x91\x42\xa3\x4f\xf7\x2b\xb8\x38\x5c\x4e\xb1\xca\x75\xf8\xde\xe3\x3b\xbb\xee\x31\x59\x4a\x9d\xc7\x4e\xff\xae\xd5\xb3\xa8\xaf\x65\xb7\xf6\x9c\xeb\x44\x89\xca\xb8\x7b\x49\xb3\x34\x7a\x4f\x77\xc3\xba\x16\xf6\xc1\xde\x5a\xe9\xf8\xfe\xb7\x9a\xc3\x52\x67\xd1\x6c\x16\x9d\xfb\x96\x2d\xe8\xdc\xdb\xa8\xef\x00\x97\x63\xf4\xe6\xd6\x73\x3f\xac\x49\x8d\xe7\x8d\x8f\xa5\x63\x48\x58\x8c\xea\xcd\xef\xbb\x7c\xd7\xf1\x7c\x95\x6f\xa7\xc9\x46\x68\xb1\x92\xf8\x8a\x13\x27\xb7\xb3\x27\xd6\x79\x4b\xac\xf3\xc7\x88\x73\xd6\x12\xe7\xec\x31\x62\x99\xb5\xc4\x32\xeb\x10\xc3\x05\xd4\xa6\x07\x90\x2f\xd8\xfa\xe7\x61\x3d\xff\x0b\x00\x00\xff\xff\x3b\x05\x29\x70\xb8\x1d\x00\x00")

func templatesBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesBaseHtml,
		"templates/base.html",
	)
}

func templatesBaseHtml() (*asset, error) {
	bytes, err := templatesBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/base.html", size: 7608, mode: os.FileMode(420), modTime: time.Unix(1455911903, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x5d\x6e\xdb\x38\x10\x7e\xf7\x29\x66\xb9\x01\xfc\xb0\x96\x18\x67\xf3\x14\x48\x5a\x60\x1f\xb2\x58\xf4\xa1\x40\xd3\x1e\x60\x2c\x8d\x6c\x3a\xd4\x4f\xc5\xb1\x13\x23\xc8\x39\x7a\x86\x9e\xa0\xef\xed\xc5\x3a\xa4\x2c\x2b\x76\x52\x34\x40\x00\x5b\x1a\x92\xdf\x7c\x33\xfa\xf8\x91\x0f\x0f\x50\x50\x69\x6a\x02\x55\x5a\x74\x2b\x05\x8f\x8f\x13\x00\x99\xee\xb0\x5e\x12\x9c\xdd\xd2\x6e\x06\x67\x5b\xb4\x1b\x72\x70\x95\x42\x7c\xed\x61\x12\x9f\xe0\x2a\x72\x0e\x25\x10\xc8\x80\x0e\x08\x80\xa4\x30\x5b\xc8\x25\xcb\xa5\x0a\x2d\x75\x0c\xe1\x19\x49\xae\x67\x17\x98\xca\x02\x50\xa0\x8b\x0d\x73\x53\x0f\xe8\xdc\x36\x8e\x14\x14\xc8\x18\x15\xc6\x55\xe6\x40\xa1\xb2\x1f\x5f\x12\xdd\xa3\x87\x64\xcf\x37\x74\x31\x94\xd6\x52\x3b\xeb\xfb\xa4\xba\x38\xf4\xbc\x8f\xc7\x68\xf2\x44\x07\x36\x6c\xc9\xeb\xf0\xf2\xf2\x02\x5d\x58\x9d\x24\x7f\x14\x4d\xce\xbb\x96\x60\xc5\x95\xcd\x26\x49\xff\x92\xaa\x2b\xc2\xa2\xef\x2a\x09\x64\xd9\xcd\xa7\xeb\x0f\xbe\x2e\x53\xd5\x5a\xe4\xb1\x48\x2c\x44\x89\xee\x41\x7d\x42\x45\x8c\x50\x63\x45\xa9\xda\x1a\xba\x6b\x1b\xf9\x58\xc8\x9b\x9a\xa9\xe6\x54\xdd\x99\x82\x57\x69\x41\x5b\x93\x53\x14\x06\x33\x30\xb5\x61\x83\x36\x72\xb9\x48\x93\xce\xf7\x62\x26\xd6\xd4\xb7\xb0\xea\xa8\x4c\xa7\x2b\xe6\xf6\x4a\xeb\x52\x58\x5c\xbc\x6c\x9a\xa5\x25\x6c\x8d\x8b\xf3\xa6\xd2\xb9\x73\xff\x94\x58\x19\xbb\x4b\xdf\xb7\x54\xff\x75\x83\xb5\xbb\xba\x3c\x3f\x9f\xfd\xdd\xff\x0d\xa3\x35\xf9\xec\x72\x88\xa6\xd0\x91\x4d\xa7\x8e\x77\x96\xc4\x07\xc4\x53\xf0\x1a\xa4\x53\xa6\x7b\xf6\x6c\xd3\xa7\xf5\xc3\x92\x1a\x96\x54\xc8\x55\x63\xae\xea\x1b\x54\xda\x31\xb2\xc9\x3d\x46\x2f\x9a\x86\x1d\x77\xd8\xc6\x95\xa9\x63\x9f\xf5\x46\x42\x6c\xdb\x67\x34\xaf\x48\xf3\x6a\x45\x78\x47\xae\xa9\xe8\xa8\x95\x44\x0f\xfb\x9b\x2c\x9a\x62\x97\x3d\x33\xb9\xdf\x2d\x14\xaf\x74\x0a\x4c\xd1\x0f\x65\xf3\x46\x93\x1f\x41\x6d\x74\xef\xa2\xf9\xc5\x61\x15\x8e\x7d\xb2\x3f\x94\xf1\xe0\xe8\x67\x80\x81\xfd\x29\xe4\x60\xfb\x43\xd8\xc7\xa5\x48\x4b\xdd\x50\xbb\x1f\xfd\xa2\xad\xe1\x0b\xc6\xb6\x92\x76\x58\xf5\xea\x47\xd5\x86\xa9\x80\x10\xe6\x52\xff\x08\xfa\xfd\x2b\xbc\x13\x69\xe1\x23\x75\xdd\x6e\x9c\xfd\x36\x72\xe1\x5e\x70\xef\x4c\x27\xd6\x5c\x1a\x5e\x6d\x16\xc1\x90\xb7\x92\xc9\x3e\x51\xbb\x4d\x29\xac\x89\x39\x34\x8c\x50\x62\xd4\x43\x65\x5e\x9b\x0c\xfe\x0b\x83\x44\x63\xf6\xb6\x32\x5a\xae\x16\xb9\xb2\x54\xf6\x7f\x78\xff\x96\xf0\x4f\x6e\x5a\x95\xfd\x8b\xb9\x38\xb2\x91\x5f\x7b\x94\x91\xe8\x36\x7b\x69\x2b\x7a\xc5\xf7\x23\x97\x77\xa6\x65\x70\x5d\x3e\xf6\x87\x6b\xbc\x3f\x3d\xa0\x7e\x4e\x5b\xb3\x70\x7a\xfd\x79\x43\xd2\xef\x3c\x9e\xcf\xe3\x8b\xfd\x28\x38\x73\xed\xbc\x1c\x3d\xe1\x0b\xec\x83\xab\xd7\xa7\x87\xeb\xf5\x79\xfe\x0c\x9d\xa2\xe5\xfe\x0d\xf6\x97\xf3\x10\x2e\xbe\xf1\xba\xfc\x19\x00\x00\xff\xff\xac\x4a\x10\x82\x55\x06\x00\x00")

func templatesConfigBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigBaseHtml,
		"templates/config-base.html",
	)
}

func templatesConfigBaseHtml() (*asset, error) {
	bytes, err := templatesConfigBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config-base.html", size: 1621, mode: os.FileMode(420), modTime: time.Unix(1455843986, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\xcb\x8e\xdb\x30\x0c\xbc\xe7\x2b\x04\xdd\xb5\x46\x5b\xa0\x27\x3b\xe8\xa5\xb7\x02\x5d\xa0\xfd\x01\x45\xa2\xbd\x42\x29\x51\x90\xe8\x6c\xb6\x8b\xfc\x7b\xe9\x47\xe2\x04\x45\x2e\xed\xc1\xb0\x28\xce\x90\x33\x84\xf8\xfe\xae\x3c\xf4\x21\x81\xd2\x1c\x18\x41\xab\xf3\xf9\x1b\x0d\x21\x49\x02\x92\x97\x68\x77\x03\x71\x94\x18\x12\x4f\xa0\x5d\xeb\xc3\x51\x39\xb4\xb5\x76\xba\xd0\xab\xde\xef\x94\x6a\xf3\xe5\x06\xc1\x7a\xc5\x70\x62\xe3\x84\x00\x65\x39\xc7\x91\xc1\xeb\x7d\x1b\xe2\xa0\x6a\x71\x9d\x6e\x2a\x5b\x0e\xae\x09\xd1\x0e\x50\x9b\x3a\xf6\xc5\x20\x0d\xf4\x54\x8f\x83\xe0\x9a\x3c\x57\xbd\xe9\xe4\x08\xcd\xa9\x9a\x0f\x1f\xd5\x74\x8a\xde\x7c\xbe\x1c\xa8\xef\x2b\xb0\xf9\x34\x0b\x11\x52\x4f\x25\x2a\xeb\x38\x50\xea\xb4\x78\x28\x70\x84\x52\xc5\x04\x4e\xf6\x26\x0b\x5a\x45\xe0\x17\xf2\x9d\x7e\xfe\xfe\xe3\xe7\xca\x9b\x98\x01\xd0\x4b\xad\xcb\xc5\xbd\x82\xa9\xae\x19\x0a\x8d\x59\x6f\x00\x81\xa0\x3d\x00\x2a\xc9\x76\x1a\xa2\x0d\xa8\x37\xc9\x89\x8b\x68\x9c\x01\x7a\xff\x75\x4a\xb6\xcd\x1c\xdd\x15\x08\x29\x8f\x7c\xd7\x65\x65\xaa\x39\x63\x70\xd0\x2a\xf8\x6b\x75\x7e\xcb\x70\x0d\x92\x8d\x5b\x90\xd1\x3a\x78\x21\xf4\x20\x5a\x7e\xbd\x21\x7c\x81\x93\x8d\x19\xe1\xc9\x51\xd4\xca\x8e\x4c\xce\xe6\xc0\x16\xc3\x6f\x61\x25\x4a\x70\x63\xa5\x6d\xc4\xec\x3f\x5b\xcf\x02\x7c\xa5\xe2\x1f\xb9\x7f\x5e\xf3\x8f\x07\x30\x59\xfc\xab\xca\x83\x71\x2c\x33\xd8\xd0\xcb\x18\xae\xf1\x7f\x99\x3a\x8c\xcc\x94\xd6\x16\x75\x3c\xc4\xc0\x57\x39\x07\x4e\x4a\x3e\x23\x7b\x61\x47\x64\xbd\x9f\x57\xa6\x6d\x16\xce\x83\xb6\x6d\x73\xff\xb0\x24\x96\xd6\xf3\x03\x5f\x60\xeb\x6f\xdb\xbc\x3f\x01\x00\x00\xff\xff\xb2\x60\x15\xab\x9d\x03\x00\x00")

func templatesLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginHtml,
		"templates/login.html",
	)
}

func templatesLoginHtml() (*asset, error) {
	bytes, err := templatesLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login.html", size: 925, mode: os.FileMode(420), modTime: time.Unix(1455844022, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x4d\x93\xdb\x36\x0c\xbd\xe7\x57\x60\x74\xae\xd6\xdd\x9e\xd7\x9e\x4e\x3b\xdb\x63\xeb\xe9\xa6\xb9\x53\x22\x24\xa1\xa6\x48\x0d\x09\xd9\xeb\x64\xf2\xdf\x0b\x52\x1f\xfe\x4c\xe2\x6d\x9d\x5e\x34\x22\xf9\x08\x02\x0f\x78\x24\x3e\x7d\x02\x8d\x15\x59\x84\x8c\x89\x0d\x66\xf0\xf9\xf3\x0b\x72\xdf\xc9\x02\x5a\x2d\xa3\x77\x47\x90\xd2\x59\x46\xcb\x11\xf4\x0e\xe0\x49\xd3\x16\x4a\xa3\x42\x58\x66\xde\xed\xb2\x95\xcc\x9d\xce\x96\xce\xe4\xaf\x21\x7f\xfc\x69\x5c\x93\xd5\x6e\x5a\x33\xa8\x34\x30\xbe\x72\x5e\x8a\x49\xf4\xc3\x7f\xdb\x33\xea\x6c\xf5\x44\x6d\x0d\xc1\x97\xcb\x6c\x11\x58\x31\x95\x0b\x6a\x55\x8d\x61\x11\xfa\xca\xe7\xc6\xd5\xee\x21\x6c\x6b\xc1\x2d\xba\x4b\xcb\xca\xa0\x67\x48\xdf\x9c\x6c\xe5\x20\x1e\x95\xad\xde\x37\x14\xc0\x38\xb7\x91\x2f\x6d\x10\x14\x58\xdc\x01\x59\x39\xc0\x96\x08\xae\x82\x97\xbf\x7e\xfb\xf3\x01\xd6\x02\x0f\x08\x1e\x6b\x0a\xd1\xaf\xbd\xeb\x3d\x28\xdd\x92\x85\x3e\xc8\x58\x09\x2d\x42\x44\x45\x75\xef\x11\xb8\x11\x4b\x5d\x67\xa8\x14\x37\x9d\x85\x02\x8d\xdb\x3d\x1c\xfb\x55\x39\xdf\x4e\xae\xc5\xff\xbc\x71\x9e\x3e\x0a\x93\xca\x64\xa0\xca\xb8\x6b\x99\x09\xc9\x1e\xb7\xe8\xc3\xc0\xb2\x18\x8f\x24\x67\xd0\x22\x37\x4e\x2f\xb3\xf5\x1f\x2f\xef\x67\x12\xa3\x51\x42\xa3\x03\xf2\x61\xea\x94\xf9\x74\x50\xed\x5d\xdf\x65\xc7\x10\x01\x19\x25\x2e\x82\xac\x2f\x33\x6c\x15\x89\x0f\xe7\xc9\x82\xf8\xd7\xea\x3c\xfe\x58\xf6\x32\x48\x7b\xb2\xd5\x73\xc4\x3f\x2d\xd2\xe8\xcc\xea\xb5\xa4\x4f\x76\x1e\x7f\x3c\xf3\x41\xf0\x64\xbb\x9e\x4f\x9c\x1d\xcf\xca\x80\xf4\xec\x19\xef\x3b\x9c\x07\x56\xb5\x87\x41\x67\x54\x89\x8d\x33\x1a\x25\x8e\xcd\xde\xe0\xcf\xf8\xaa\xda\xce\xe0\x43\xe9\x5a\xa1\xb5\x67\x57\xaa\x8e\x84\x63\xfa\x28\xbb\xac\xb3\x78\x4e\xc4\x42\x7c\x3e\xa1\xef\x62\xe2\xad\x7c\x76\x02\xdd\x39\xaf\xdf\x40\xe9\x7a\xdc\x72\x4f\x56\x23\x81\x17\xae\x9c\x72\x3c\x10\x7b\x00\x0d\xdc\xce\xe3\x6f\x30\x25\x53\xa1\x53\x36\x1d\xd4\xa0\xe9\x7e\x31\xae\xdc\x7c\x39\x68\x57\x55\x52\xa9\x12\x7b\xc4\xe6\x45\x02\xaf\x7e\x77\x10\xe4\x9a\xa1\xa4\xa5\xc0\x5e\x91\xe5\xf0\x03\xfc\xdd\x07\x8e\x32\x13\x75\xd6\xce\x69\x08\xf1\x6e\x88\xf2\x14\x15\x42\x29\x67\x7a\x6c\xb1\x2d\xd0\x8b\xc4\xa2\x0f\x77\x4b\xe0\xcd\x19\xfb\x40\x81\x0a\x32\xc4\xfb\xfb\xe4\xec\xf8\x12\x55\x9a\xdc\x05\x62\x72\xf1\x72\xfe\x24\xe3\xdb\xd9\xaf\xbc\xeb\x0b\xb9\x8f\xa6\x2c\x0f\x56\xc7\x14\x1f\x50\x19\x6c\x95\xe9\x63\xd6\x47\x74\xd9\x60\xb9\x41\x7d\xed\x98\x75\x82\x5c\xfa\x75\x8d\x80\xab\xf5\xf2\x9d\xe2\xf4\xb4\x55\x8c\x37\x07\x3a\xc2\xaf\x46\x38\xac\xfd\xb7\x10\xbf\x22\x8a\xe3\xd2\x7f\xb6\xaa\x30\x08\xa3\x3b\xf3\x0b\x14\x80\xaa\x54\xe6\x3b\x65\x19\xd8\x41\x43\x1a\x21\x3e\x0a\x7b\x6e\xc8\xd6\x50\x79\xd7\xa6\xf7\x66\xc8\xd8\x15\x05\xdc\xfb\x56\xbb\x59\x14\xbf\x0e\x8d\x01\x3c\x8b\x34\xb5\x16\x67\x6f\xd6\xc6\xe3\x8d\xda\x48\xd5\x59\xb8\xd7\x7f\x5b\x36\xf1\xd2\xd0\x5d\xe3\xd8\x85\xa9\x5e\x66\x93\xf3\xd3\x72\x80\x5c\xb3\x96\x82\x83\x75\x02\xdc\x4d\x0b\x77\x89\x6b\x2b\x95\xf2\x8d\xb8\x46\xc8\x97\xe3\xfa\x90\x00\xff\x8f\x00\xa6\x2a\x81\xb1\xa1\x84\x1d\x19\x23\x1d\x9b\xb4\x4e\xd0\x51\xc9\xd2\x58\x85\xd4\x67\x0d\x5e\x47\x31\x14\x08\x49\xd2\x26\x0a\x66\xe8\xc9\x62\xbb\x06\x15\xa2\xfe\xae\x4a\xf8\xda\x7d\x3e\xbd\x6c\x97\x95\x5b\xf4\xcc\xd2\x0d\x0e\x09\x09\x7d\xd1\x12\xcf\x54\x14\x2c\x6d\x22\xdb\x5c\xba\x6a\xd5\x1b\x4e\xea\x19\xba\xc9\xa7\xc5\xb0\xef\x6d\x91\x3c\x2d\xce\xbb\x41\x99\x91\x78\xc6\x7e\x7c\x02\x8f\x3f\x87\xc6\xfe\x9f\x00\x00\x00\xff\xff\xb1\xbd\x81\x87\xfc\x0b\x00\x00")

func templatesRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesRegisterHtml,
		"templates/register.html",
	)
}

func templatesRegisterHtml() (*asset, error) {
	bytes, err := templatesRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/register.html", size: 3068, mode: os.FileMode(420), modTime: time.Unix(1455844119, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSettingsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x4f\x73\xeb\x26\x10\xbf\xbf\x4f\xb1\xa3\xe9\x55\x4e\xd3\x77\xeb\x38\x3e\xa4\x79\x6d\xdf\x29\x99\x38\xcd\x1d\xc4\xda\xa2\x41\xa0\x02\xb2\xe3\x7a\xfc\xdd\xbb\x20\xc9\x96\x64\xc7\x7f\x9a\xbc\xc9\x21\x0e\xec\xfe\x80\xdf\xfe\x15\xac\xd7\x20\x70\x26\x35\x42\xe2\xa5\x57\x98\xc0\x66\xb3\x5e\x8f\x9e\xc2\x38\x8c\x00\xb5\x20\xd1\x97\x0e\x2e\x33\xda\xa3\xf6\x49\x23\xfe\x69\xae\x0c\x67\x0a\x7e\xbd\x81\xd1\x14\xbd\x97\x7a\xee\x5a\x95\x6b\xe7\x5d\xe5\x3d\xff\x1b\x33\x1f\x20\x63\x21\x17\x90\x29\xe6\xdc\x4d\x62\xcd\x32\x99\x7c\x01\xe8\xca\x32\xa3\xd2\x57\x97\x5e\xff\x12\x35\x7d\x5d\x8b\x1f\xca\x87\x6b\x86\xfa\x92\x69\x54\x10\x7f\x53\xa9\x67\xa6\x03\x3b\x00\x4c\x73\x64\x82\x48\xf7\x50\x84\xcb\xbf\xf6\x61\xb5\xef\x26\xb7\x95\x54\x02\xbe\xd3\xb6\xb6\x60\x5e\x1a\x3d\xbe\xca\xbf\xf6\x0e\xb8\xa2\x13\x8e\x9f\xc8\x8d\x58\x0d\x8f\xf3\x8c\x2b\x6c\x61\xf5\x24\xfe\xa6\x14\x0b\x81\xda\xa1\x18\xac\x08\x6b\xec\x50\x14\x84\x62\x32\x76\xde\x1a\x3d\x9f\x3c\xa3\x75\x91\x61\x33\x1f\x5f\x91\xf2\xe0\x8a\xf5\xba\x89\xf1\xa8\x59\xb3\xd9\x1c\x02\x93\x6c\xef\xc8\x93\x2c\x1e\x71\x21\xcf\xa3\xd1\x9a\xcf\xd4\x92\xad\x5c\xba\xb4\xac\x4c\x3a\xd4\xa2\xeb\xff\x90\xfe\x4f\xe6\xf2\x0f\xe4\xf7\x24\x0b\xbc\xc8\x45\x91\x47\x58\xf5\x81\x24\xee\x98\x67\x70\x27\x2d\x95\x8d\xb1\xab\x8b\xe8\x84\xa5\xb4\xf2\x5c\x32\x24\x09\x79\x75\x24\x65\x7b\xd3\xce\xa4\x3b\x0c\xe9\xdf\x86\x2b\x8c\xd3\xdc\x58\xf9\x2f\xb5\x0d\xa6\x12\x60\x59\x28\x8c\x9b\x84\xfa\x83\xc5\x05\x25\x14\xb5\x94\xb6\x4f\x84\x9e\x92\x40\x81\x3e\x37\xe2\x26\x79\xb8\x9f\x3e\x1d\xac\xf1\xb8\xe7\xdc\x9a\xaa\xec\x16\xb9\x62\x9c\x2a\x7b\xd8\x06\x20\x8c\x0a\x91\x86\x81\x26\xbf\xa9\x34\xe2\x92\xc9\x33\xe5\x1d\x97\x4a\x7a\x72\x68\x14\x1d\xee\x17\x7b\x1b\x5d\xff\xfc\x66\xcb\xb0\xd4\x2b\xcc\xb0\x76\x07\x7b\x37\x52\xa9\xcb\xca\x83\x24\x2b\x17\x5b\x1e\x69\x59\x71\x25\xb3\x04\xfc\xaa\xc4\x76\x37\xd0\xac\xc0\x2e\x2a\x81\x05\x53\x15\x89\x5a\x34\x39\x52\xce\x00\xff\xd9\xb5\xdb\xd1\xce\x36\xd8\xc2\x36\x9b\x2c\xc7\xec\x05\xc5\x7a\x4d\x3d\x7d\xb3\x99\xc0\x80\xd3\x43\x04\x0e\xd2\x61\x8f\xfd\xd1\x0e\xf6\x6e\x07\x58\xb9\x60\x1e\xcf\xf6\x40\x0b\x3f\xe5\x82\x16\xb7\xe7\x83\xa1\x0b\x6a\xe0\xe5\x3e\x70\xd4\xbb\x5b\x27\xe4\xa8\xca\x94\x2b\x93\xbd\x24\x93\x6f\x3a\x36\xeb\x86\x00\x48\xed\x3c\xd3\x19\xba\x40\x77\x65\x2a\x58\x32\xed\xc1\x1b\xc8\xa5\x40\x08\xd5\xb0\xf2\x39\xd1\x87\x99\x35\x05\xf8\x9c\x56\xc6\xa0\x8c\xa8\xe6\xe9\x84\xd3\x55\xf8\x03\xea\xe4\xb7\xfa\x73\x0f\xdf\x0a\x8e\x22\x7c\x0b\xcf\x2a\x97\xeb\x33\xca\x25\xc6\x82\x9b\xd7\x4b\x13\x06\x03\x93\x32\x37\xde\xb8\x36\x53\xb6\x5b\x35\xc9\xd2\x83\xd4\xd9\xb1\x4b\x8d\x68\xc9\x43\x54\x9e\xcc\x88\x88\x85\x1a\xfc\xae\xd2\x78\x97\xb1\x0b\x4a\x8f\x13\xc6\xb6\x90\x83\xc6\x3e\x47\xe5\x99\xc6\xd6\xe0\x0f\xac\x81\x36\x71\xa0\xb9\x39\xc2\x52\x2a\x05\x4c\x29\xb3\x84\x52\x66\xbe\xb2\x54\x10\x8c\xee\x99\xb5\x0d\xa1\x1e\x38\x42\xac\x77\x15\x6a\x26\x54\x8a\x85\xe9\x5f\xbf\x3f\xc2\x0c\x51\x7c\x66\x31\x7c\x2f\x4a\x63\xfd\xfb\x2a\xa0\xec\x31\x6a\x0f\xa0\xc6\xe0\xa9\x4d\x0f\xb2\x83\x41\x6e\x71\x36\xf8\x58\xe6\xd2\xf3\x8a\xc2\xe8\x53\x19\xe9\xc4\xaf\x66\x43\xad\xee\x1c\xd3\x2d\x64\x7c\xc5\xfa\x51\x2b\x3f\xc5\x6f\xb7\x2c\x7b\xa9\x4a\xf7\xb9\x8e\x13\x74\x17\xe2\xcc\x61\xca\x23\x9b\xda\x6d\x35\x33\xb8\x6b\x74\xc7\xfc\x75\x24\xc7\x1f\xd1\xd1\xd5\x0c\x77\x7d\xfb\xee\x16\xea\x53\x80\xaf\xc8\x9e\x72\x15\xf2\x3f\x28\x66\x32\xe6\x34\xe5\xf8\x38\x33\x02\x0f\x5f\xd5\xa2\xe6\x7f\xe6\xf9\xfe\x03\xe8\xc2\xd0\xbe\x79\xf9\x71\x45\x27\xc4\x66\x36\xa3\x1e\x93\xd6\x73\x35\xdf\xce\xfb\x21\xe3\x95\xf7\x46\x37\x7d\xcb\x55\xbc\x90\x94\xad\xcd\xe6\xdc\x6b\xa0\xbf\x94\xde\x95\xac\x52\x3e\x99\x4c\xd9\x82\xfc\x5f\x2f\x99\x50\x04\x77\xb8\xe4\x40\x34\x2b\x1b\x1e\x70\x02\x5f\xeb\x38\x66\xe1\xbb\xaa\x7a\xe1\x7b\xfb\xaa\x1a\x0c\x8f\x8f\xcd\x5a\xd8\xfc\xdb\xbd\x76\xff\x0b\x00\x00\xff\xff\x75\x5f\x3f\x21\x16\x0f\x00\x00")

func templatesSettingsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSettingsHtml,
		"templates/settings.html",
	)
}

func templatesSettingsHtml() (*asset, error) {
	bytes, err := templatesSettingsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/settings.html", size: 3862, mode: os.FileMode(420), modTime: time.Unix(1455435507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesShitbucketImportHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x52\xc1\x8e\x1b\x21\x0c\xbd\xe7\x2b\x2c\x2e\x3d\x4d\x50\x7b\xac\x32\x39\x54\xbd\x54\xaa\xd4\xaa\xbb\xfd\x00\x06\xbc\x3b\x68\x19\x8c\xc0\x6c\xb3\x8d\xf6\xdf\x6b\xc8\x74\x92\x1c\x46\x63\xfc\xcc\x7b\x7e\xc6\xe7\x33\x38\x7c\xf2\x11\x41\xb1\xe7\x80\x0a\xde\xdf\xcf\xe7\xfd\x63\x8b\x5b\x04\x18\x9d\xa4\x76\x37\x75\x96\x22\x63\xe4\x56\xb9\x3b\x38\xff\x0a\x36\x98\x52\x46\x95\xe9\x8f\x3a\xee\x00\x6e\x73\x96\xc2\x70\x2a\xc3\xc7\x4f\x1d\x11\xec\x89\xf2\x02\xc6\xb2\xa7\x38\x2a\x21\xcd\xf8\x8a\xb9\x08\x6b\x99\x3d\x4f\xd5\xbe\x20\x0f\x7e\x49\x94\x3b\xbf\x82\x05\x79\x26\x37\xaa\x9f\x3f\x1e\x1e\x57\x8e\x7b\x85\x46\x38\x3c\x67\xaa\x69\x83\xa5\x20\x98\x09\x03\x08\x36\xaa\x9a\x83\xba\xb6\x13\x39\x4b\x4b\x1d\x56\xc7\x87\x4d\x13\x7e\xff\xfa\x7e\xd0\x3d\x7d\xc3\xe2\x63\xaa\x7c\x27\xb4\x12\x28\xf0\xae\x33\x0f\xa5\x4e\x8b\x97\x5e\xf9\x2d\xe1\xa8\x18\x4f\x12\x47\xb3\xe0\xaa\x9b\x82\xb1\x38\x53\x70\x28\x9d\xcc\xcc\xa9\x7c\xd6\xfa\x6a\x75\x8f\x27\xb3\xa4\x80\x7b\x4b\x8b\x36\xc9\x6b\xb9\x54\x14\x98\xca\x64\xe5\xc8\x26\xf8\xbf\x42\x15\x29\xe2\xad\xbb\x92\x4c\xec\x1d\xcc\x18\xd2\x97\x40\xf6\x65\x73\xd8\x32\xc3\xd4\x53\xc7\xaf\x14\x3f\x70\x1b\xc2\xb3\x18\x64\x02\xe3\x1c\x98\xf8\x06\x93\x29\xde\x36\x91\x19\x6c\x46\x57\x1a\xc6\x33\x5e\x66\xd0\xb8\xb7\x39\x6b\x19\xf4\x76\x98\x2a\x33\xc5\xd5\xe9\x7f\xdf\xab\xec\xc4\x11\xe4\x1b\x64\x47\x4c\x0d\xac\x8e\xdf\xfa\x1b\x1e\xf4\xe5\xd2\xfa\xf8\xba\xcd\xb0\xaf\xc8\x85\x78\xfd\x5d\xb7\xec\x5f\x00\x00\x00\xff\xff\x99\x01\x3c\x28\x8e\x02\x00\x00")

func templatesShitbucketImportHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesShitbucketImportHtml,
		"templates/shitbucket-import.html",
	)
}

func templatesShitbucketImportHtml() (*asset, error) {
	bytes, err := templatesShitbucketImportHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shitbucket-import.html", size: 654, mode: os.FileMode(420), modTime: time.Unix(1455259370, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTagIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x50\xbb\x4e\xc4\x30\x10\xec\xf3\x15\xab\x15\x05\x14\xc9\x09\x4a\x94\xa4\x81\x06\x09\x5d\x81\xe0\x03\x4c\xbc\xe7\xb3\x64\xd6\x92\xbd\xe4\x0a\x2b\xff\xce\xda\xba\x88\xab\xac\x79\x78\x66\xec\x52\xc0\xd2\xc9\x33\x01\x8a\x97\x40\x08\xdb\xf6\x69\x5c\x56\x9e\xd8\x2a\xe8\x6e\x1c\x4b\x64\x21\x96\xea\xe9\x46\xeb\x57\x58\x82\xc9\x79\xc2\x14\x2f\x38\x77\x00\xb7\xdc\x12\x43\x1f\x5c\xff\xf8\xd4\x14\x80\x52\x92\x61\x47\x70\x27\xc6\xc1\xf3\x04\x43\x6d\xd1\x9c\xaa\x8d\x66\xbf\xf5\x2d\x8c\x70\x4e\x74\x9a\x50\x7b\x13\xad\x94\x72\x9d\x66\x5c\xbf\x7a\xba\x20\xa0\xb7\xd8\x32\x86\xb7\x57\x9d\x81\xb3\xda\x1a\x3c\x9a\x1f\x52\x02\xee\x4b\x69\xf8\xeb\xe3\xfd\x25\xfe\xb2\x6c\xdb\xc3\x78\x30\xfb\x06\x0a\x99\xae\xa5\xc7\x28\x67\xcf\x6e\xd8\x15\xb6\x4d\x18\x0f\xfa\x88\xb9\xbb\x1e\xff\xdf\xf0\x17\x00\x00\xff\xff\x1d\xd1\x06\x3d\x29\x01\x00\x00")

func templatesTagIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTagIndexHtml,
		"templates/tag-index.html",
	)
}

func templatesTagIndexHtml() (*asset, error) {
	bytes, err := templatesTagIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tag-index.html", size: 297, mode: os.FileMode(420), modTime: time.Unix(1455259161, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlEditHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\xc1\x6e\xdb\x30\x0c\xbd\xf7\x2b\x08\x61\x57\x27\x4b\x8f\x43\x92\xc3\xd0\x6e\x18\x30\x60\xc5\xda\xed\x2e\xcb\x4c\x4c\x54\x96\x04\x49\x4e\x93\x06\xf9\xf7\x51\x8a\xe3\xd9\xc9\xd6\x6e\xe8\xa1\xa8\x45\x3e\x8b\x8f\xef\xd1\xcc\x7e\x0f\x15\xae\xc8\x20\x88\x48\x51\xa3\x80\xc3\xe1\xb6\xa2\x48\x66\x0d\x9c\x9b\xfc\xf8\xfe\x75\xf2\x90\x12\x1c\xe7\x33\x9a\x8a\x1f\xae\x06\x6f\x29\x6b\x22\x9a\x28\xba\xf0\xbb\xd6\x6b\xf8\xb0\xc8\x2f\xa6\xd0\xbc\xa2\x0d\x28\x2d\x43\x58\x08\x6f\x9f\xc4\xf2\x0a\x60\x18\x53\x56\x17\xdb\x50\xcc\xae\x73\x86\x73\x2b\xeb\x9b\x53\x32\x3d\x17\xb5\xf5\xf4\xcc\x45\xa4\x16\x20\x55\x24\x6b\x16\x82\x0b\x79\xdc\xa0\x0f\x4c\x80\x0b\x16\x41\x6e\x98\xb9\xa0\x4a\x64\x02\x93\x2f\x37\x5c\x5b\x40\x83\xb1\xb6\xd5\x42\xdc\x7d\xbb\x7f\xe8\xee\x1f\x57\xcf\x05\xd6\xde\xb6\xae\x4f\x33\x40\xcb\x12\x35\x70\x6e\x71\xd2\xe4\x8c\x2c\xa4\xa6\x3d\x1f\x32\x52\x2c\xb3\x40\xf3\x69\x3e\x0d\xee\xf9\x43\x9b\xb3\x41\x1d\x46\x90\x71\x6d\x04\xaa\xce\x0b\x65\x5e\x5d\x11\x01\x71\xe7\x90\x11\xb8\x65\x95\x8d\x6c\xb0\x47\x6f\xa4\x6e\x31\xa9\x91\x9b\xce\x2c\x52\xdb\x4e\x4b\x85\xb5\xd5\x15\x72\x07\xb7\x5b\xd9\x38\xb6\x2f\xf9\x91\x11\xc3\x4e\xa7\x4c\xb1\xd7\x65\x74\xf8\x2f\x91\xe4\x3a\xbc\xae\x11\x83\xde\x28\xd1\xb0\xcc\xab\x0a\x65\x70\x2f\xd0\x71\x2c\x3e\x63\x4c\x34\x3e\x59\x7f\x43\x81\x55\xda\xc1\x85\x5c\xca\x36\x5c\x0f\x7d\x11\x14\xa1\x51\x08\x9a\x91\x90\xa2\xa4\x79\xde\x78\x04\xdb\x68\x95\x74\xc4\xf3\x48\xcf\x7c\xb7\xb1\xe6\xaf\x92\xf2\x31\x38\x69\x32\xfb\x1a\xb5\xfb\xa8\xad\x7a\xbc\x50\x2a\x49\x95\x9f\xec\x6a\x15\x30\xb2\x74\x09\x5b\x94\x19\x9c\x75\x83\xa6\x0d\x11\x4a\x84\x80\x4e\x7a\x19\xb1\x82\x72\x07\x12\xf8\x72\xc5\x73\x97\x6a\xbc\xc9\xc5\xf3\x6f\x31\x13\x6a\xaa\xe2\xfa\xdc\xc4\x9f\x14\xa8\x24\x4d\x71\xf7\x6f\x56\x9e\x2e\x9a\xbd\x1f\x9b\x3a\xc4\xd6\xa8\x1e\x4b\xbb\x1d\x01\x4e\xcc\xc6\xb1\xd1\x34\x38\x4f\x1b\x56\xe2\xe4\x7d\x7f\x4d\xe7\x7f\x9f\x66\xef\x69\x75\xb4\xff\xee\x18\x63\xd3\x33\x1a\xab\xfd\x9e\xf7\xd9\xe1\x70\x5e\xa5\xc3\x8d\xf9\x9c\xf7\x7b\x61\xf5\xcb\x66\x0f\x2d\x3d\xf1\xb0\x46\xb3\x8b\xce\x69\xc2\x00\x4f\x35\x1a\x88\x35\xc2\x5a\xdb\x52\x6a\xb6\x3a\xe6\x25\x4c\x01\x5c\x5b\x6a\x52\x93\xb1\xd1\x2f\x7e\xbd\x65\x1b\xa3\x35\x9d\x34\xa1\x2d\x1b\x8a\x3d\x93\x32\x1a\xe0\xbf\x82\x17\xb8\x6c\x75\x14\xcb\x7b\x5e\x9e\xf3\xe9\xf1\x95\xe5\x5c\x0e\x70\x02\x6a\x8f\xab\xcb\x75\x4b\xa6\xc2\x6d\xda\xf8\x62\xa9\x24\x7f\x24\x7a\x3e\x95\xdd\xfa\x9e\xa6\x39\xcb\x4b\xfe\x48\xa8\xfb\xf7\xfb\xa7\xe3\x57\x00\x00\x00\xff\xff\x5c\x0c\x0f\x7d\x71\x06\x00\x00")

func templatesUrlEditHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlEditHtml,
		"templates/url-edit.html",
	)
}

func templatesUrlEditHtml() (*asset, error) {
	bytes, err := templatesUrlEditHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-edit.html", size: 1649, mode: os.FileMode(420), modTime: time.Unix(1456002859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xc1\x6e\xd4\x30\x10\xbd\xef\x57\x8c\xac\x0a\xc1\x61\xb3\x82\x23\xec\xe6\x00\x12\x52\xa5\x82\x10\x14\x24\x8e\xae\x33\x49\x46\x75\xec\xc8\x9e\xec\x56\x8a\xf2\xef\x4c\x9c\xa4\xb8\xb0\xa7\xe4\xcd\x3c\xcf\x9b\xf7\xec\x71\x84\x0a\x6b\x72\x08\x8a\x89\x2d\x2a\x98\x26\xa9\x51\x0d\xc5\x6d\xbc\xd7\xcd\x2f\xc2\xcb\x52\x2a\x04\x15\x5f\x75\x87\x0b\x44\x1b\x71\x9a\xbe\x90\xa3\x4e\x5b\x8a\x4c\x06\x3e\x7a\xff\xd8\xe9\xf0\x48\xae\x99\x09\xae\x5a\x99\xe9\x67\x97\x29\x19\xef\x18\x1d\xcf\x5a\xbb\x63\x45\x67\x30\x56\xc7\x78\x52\xc1\x5f\x54\xb9\x03\xc8\x6b\xc6\xdb\xfd\x53\xdc\xbf\x7d\x97\x3a\x00\xe3\x38\xef\xf6\xc9\x0f\x8e\xe5\x34\xc0\x52\x83\x9b\x88\xcc\x22\x1c\xe1\xfd\x09\x8a\x1f\x1b\x78\x41\xb1\xbe\x69\xb0\x22\x97\x28\x77\x09\xdc\xba\x9c\x12\xb4\x6b\x10\x6e\x86\x60\x13\xe5\xe7\xf7\xbb\x6c\x42\x9a\x21\xda\xaf\x7d\xc8\x46\xcd\x64\x49\xea\xdb\xf0\x60\xc9\xbc\xc9\xd9\x89\xcf\xd8\xf5\x56\xb3\x78\x16\xde\xbe\xd7\x81\x49\x5b\x05\x0e\x2f\x29\x83\x27\x06\x25\x2a\x6a\xd1\x54\xdb\xda\x2a\xb3\xf3\x42\x5f\xa2\xcc\x1d\xad\xc9\x2e\xf8\x5a\x90\xff\x77\xfe\x8d\x73\x65\xf4\x5b\x7f\xde\x69\xdf\x0d\x8c\x95\x2a\x3f\x4b\xc8\xd5\xac\xb3\xc4\x2d\x52\xaf\x5a\xb4\x96\xfa\x0f\xc7\x43\x9f\x8d\x3f\xc8\xfc\x0d\x66\x40\xd6\x4d\x6f\x64\x77\x55\xc3\xc8\x03\xc0\xa0\xca\xfb\x16\x03\x02\x45\x70\x9e\x5b\x71\x0c\x09\x3f\x0c\x0c\x91\x2c\x3a\x83\x05\xfc\xf6\x03\x18\xed\x80\xba\xde\x07\x86\x4a\xb3\x86\x3a\xf8\x0e\xe4\x04\x06\x88\x18\xce\x64\x30\x82\x5c\x87\x14\xe0\xa8\xa1\x0d\x58\x9f\x94\x6c\x1e\xf0\x8c\x21\x4a\xfc\xf1\x39\xda\x69\x52\xe5\x86\x8e\x07\x5d\x16\xcf\x66\xf2\x44\x57\x1f\xeb\xe7\x6f\xe7\x4f\x00\x00\x00\xff\xff\x85\x1f\xa8\x61\x30\x03\x00\x00")

func templatesUrlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlIndexHtml,
		"templates/url-index.html",
	)
}

func templatesUrlIndexHtml() (*asset, error) {
	bytes, err := templatesUrlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-index.html", size: 816, mode: os.FileMode(420), modTime: time.Unix(1456012257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlNewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4f\x6f\xdb\x3e\x0c\xbd\xf7\x53\x10\xba\xfc\x4e\xae\x7f\xed\x71\xb0\x73\xd8\x79\xc0\x8a\xad\x1b\xb0\xa3\x2c\x33\xb1\x50\x59\x12\x24\xba\x4d\x1b\xf4\xbb\x8f\xf2\x9f\xd4\x4a\xba\x15\x45\x77\x08\x42\x91\xf4\x23\xf9\x9e\x4c\x1f\x0e\xd0\xe2\x56\x5b\x04\x41\x9a\x0c\x0a\x78\x7e\x3e\x1c\x2e\x6f\x93\x9d\x2c\x40\xdb\xb2\xeb\x62\x95\xa7\x9c\x25\xb4\x94\x32\x2f\xaa\x56\xdf\x83\x32\x32\xc6\x5a\x04\xf7\x20\x36\x17\x00\x6b\x9f\x72\xa6\xd8\xc7\xe2\xea\x7a\x8c\x70\x6c\xeb\x42\xbf\x04\x93\x5d\x74\x2e\xe8\x27\x46\x94\x46\x80\x54\xa4\x9d\xad\x05\x17\x0b\x78\x8f\x21\x72\xb5\x21\x98\x22\x0e\x4d\xaf\xc7\x82\x02\x7a\xa4\xce\xb5\xb5\xb8\xf9\xfa\xfd\x76\x06\xcd\x4b\x8e\xa8\xbb\xe0\x06\x7f\x0c\x73\x82\x91\x0d\x1a\xe0\x58\x9d\x10\xc5\xba\xbf\xbe\x2d\xae\x60\x69\x34\x59\x96\x02\x9f\xc6\x27\xc4\xe6\xc7\xb7\x2f\x55\x39\xda\x2b\xb4\x93\x09\x13\xc2\x0b\xc4\xf5\xaa\x2e\xe7\x6a\xeb\x07\xca\x9a\x9b\x2b\x08\xd0\x6d\x9d\xcd\x47\x8f\x1e\x6b\x41\xb8\x67\xdb\xca\x1e\xe7\x5e\xbd\x91\x0a\x3b\x67\x5a\xe4\xee\x3b\x22\x1f\x3f\x95\x25\xee\x65\xef\x0d\x5e\x2a\xd7\x33\x71\x03\x39\x25\xbd\x66\x16\xf5\x13\x3f\x66\x9d\xc5\xf5\xf4\x25\x37\x7c\xe4\x2a\x3b\xbc\x87\x38\x92\xbb\xf8\x0e\xe6\x6e\x39\xfd\x5f\x50\x97\x58\xca\x4a\xe7\x24\x9e\x93\x36\x25\x67\xac\x31\x4b\x0c\x85\xa1\x88\x4a\xa3\x55\x08\x46\x47\x0f\xc9\xab\x0d\xdf\xb3\xf7\x31\xc8\xc7\xe8\xa5\x1d\x1b\xeb\xd0\xf8\xcf\xc6\xa9\x3b\x71\x76\xe5\x61\x9e\xcf\x6d\xb7\x11\x89\x99\x4a\xb9\x45\x33\x26\x8f\xe4\x40\x3f\x44\x82\x06\x21\xa2\x97\x41\x12\xb6\xd0\x3c\x82\x04\x06\x57\x58\x95\xa9\xc6\x87\x44\xfb\x53\x43\xd7\xa7\x4a\xfd\xd4\x51\x37\xda\x68\x7a\x7c\x53\xaf\x45\xe9\x49\xb9\xff\x73\xbd\xd6\xb9\x1d\xaa\xbb\xc6\xed\xb3\x84\xa5\xb3\xdc\x97\x09\xed\x83\xbe\x67\x26\x16\x59\x8f\x30\xb3\xb4\x4b\xf8\x14\xe1\x66\xf2\xe7\xb5\x4e\x67\x39\x93\xf1\xef\x42\xae\xe5\x9a\xf1\xc1\x59\xc3\x0a\x79\x6f\x34\x46\x78\xe8\xd0\x02\x75\x08\x3b\xe3\x1a\x69\x58\x46\x22\x6d\x77\xa0\x23\xf8\xa1\x31\x5a\x5d\xe6\x22\x7e\xec\x45\x7c\x6d\xab\x8e\x42\xc4\xfe\xb5\xcb\x96\xce\x66\x77\x3c\xe7\x42\x35\x03\x91\xb3\x33\xc7\xcb\xf6\x99\xc1\x1b\xb2\xc0\xbf\x82\xd7\xbd\x1c\x0c\x89\xcd\x2f\x37\xfc\x17\xf8\x92\x76\x7a\x1a\xaf\xe7\xbb\x39\x01\x6c\x2a\xb9\x7a\x4a\x40\x17\x70\x7b\xbe\xbd\xb5\x6d\x71\x3f\x2e\xef\x8d\x92\xfc\xee\x99\xaa\x94\x6f\x53\x52\x95\x89\x86\xf1\x7b\x32\x39\xe7\xbf\x97\x4f\xd2\xef\x00\x00\x00\xff\xff\x41\xbe\x30\x3b\xbb\x06\x00\x00")

func templatesUrlNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlNewHtml,
		"templates/url-new.html",
	)
}

func templatesUrlNewHtml() (*asset, error) {
	bytes, err := templatesUrlNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-new.html", size: 1723, mode: os.FileMode(420), modTime: time.Unix(1456002859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\x4b\x0a\x02\x41\x0c\x44\xf7\x9e\x22\x64\xef\x9c\xc4\x95\x9f\x03\x34\x4e\x29\x81\x18\x87\xb1\x44\x61\xe8\xbb\x1b\xbb\x15\x66\xd5\x55\xaf\x8b\x97\x65\x91\x11\x17\x0b\x88\xd2\xe8\x50\xa9\x35\xd9\x70\xda\xef\x86\xe3\x17\xf4\x8e\x18\x33\x6c\x56\xeb\xf3\x3d\x88\xa0\xfe\x30\x71\x9b\xbc\x30\x3f\x9e\xb3\x6f\xa7\x32\xd3\x8a\xab\x04\x5e\x6d\xf8\xa6\x68\x2a\xb5\x89\x45\x0f\x20\x2d\xae\x8f\xec\xff\xd8\x3d\x79\x27\xdf\x4f\x00\x00\x00\xff\xff\xd0\x57\xb0\x99\x95\x00\x00\x00")

func templatesUrlViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlViewHtml,
		"templates/url-view.html",
	)
}

func templatesUrlViewHtml() (*asset, error) {
	bytes, err := templatesUrlViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-view.html", size: 149, mode: os.FileMode(420), modTime: time.Unix(1455258875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/404.html": templates404Html,
	"templates/base.html": templatesBaseHtml,
	"templates/config-base.html": templatesConfigBaseHtml,
	"templates/login.html": templatesLoginHtml,
	"templates/register.html": templatesRegisterHtml,
	"templates/settings.html": templatesSettingsHtml,
	"templates/shitbucket-import.html": templatesShitbucketImportHtml,
	"templates/tag-index.html": templatesTagIndexHtml,
	"templates/url-edit.html": templatesUrlEditHtml,
	"templates/url-index.html": templatesUrlIndexHtml,
	"templates/url-new.html": templatesUrlNewHtml,
	"templates/url-view.html": templatesUrlViewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"404.html": &bintree{templates404Html, map[string]*bintree{}},
		"base.html": &bintree{templatesBaseHtml, map[string]*bintree{}},
		"config-base.html": &bintree{templatesConfigBaseHtml, map[string]*bintree{}},
		"login.html": &bintree{templatesLoginHtml, map[string]*bintree{}},
		"register.html": &bintree{templatesRegisterHtml, map[string]*bintree{}},
		"settings.html": &bintree{templatesSettingsHtml, map[string]*bintree{}},
		"shitbucket-import.html": &bintree{templatesShitbucketImportHtml, map[string]*bintree{}},
		"tag-index.html": &bintree{templatesTagIndexHtml, map[string]*bintree{}},
		"url-edit.html": &bintree{templatesUrlEditHtml, map[string]*bintree{}},
		"url-index.html": &bintree{templatesUrlIndexHtml, map[string]*bintree{}},
		"url-new.html": &bintree{templatesUrlNewHtml, map[string]*bintree{}},
		"url-view.html": &bintree{templatesUrlViewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

