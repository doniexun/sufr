// Code generated by go-bindata.
// sources:
// templates/base.html
// templates/config-base.html
// templates/login.html
// templates/register.html
// templates/settings.html
// templates/shitbucket-import.html
// templates/tag-index.html
// templates/url-edit.html
// templates/url-index.html
// templates/url-new.html
// templates/url-view.html
// DO NOT EDIT!

package app

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\xdd\xb2\xdb\xb6\x11\xbe\xf7\x53\x20\x74\xa6\xe7\xa2\xa6\x98\x93\x7a\x3a\x53\x57\x52\xc6\x4d\xe2\xd4\x53\x4f\x3b\x13\x3b\xb9\xed\x40\xc4\x52\x82\x0f\x48\x30\x00\x28\x1d\x8d\xc7\xcf\xd1\x67\xe8\x13\xf4\xde\x7d\xb1\xee\x02\x20\x05\xfe\xc8\xe7\xb4\x9d\x5c\x9c\x23\xfc\x2c\x76\x17\xfb\xf3\xed\x82\x1f\x3e\x30\x01\x95\x6c\x80\x65\x9d\x51\x79\xcb\x8d\x93\x5c\x65\xec\xe3\xc7\x27\x6b\x21\x8f\xac\x54\xdc\xda\x4d\x66\xf4\x29\xdb\x3e\x61\x2c\x5d\x2b\xb5\xca\xd5\x3e\xbf\xfd\xda\xef\x8c\xf7\x88\x57\xa9\x1b\xc7\x91\xb3\xc1\x7d\x4f\x80\x24\x87\xe7\xdb\x38\xc4\x09\x67\x07\x03\xd5\x26\x43\x1d\x56\x3f\xfd\xf8\x86\xfe\x50\x6e\xc6\x1c\x37\x7b\x70\x9b\xec\xef\x3b\xc5\x9b\xbb\x6c\xdb\xef\xbf\x93\x4e\x01\x52\xac\x0b\xde\x73\x59\x17\xc4\xb1\x9f\xb4\xbd\x78\x07\xf7\x2e\xaf\x3b\x07\x82\x71\x75\xe2\x67\x9b\x9f\x0c\x6f\xb3\xed\xda\xd6\x5c\xa9\x6d\x2a\xd9\xc0\x11\x8c\x8d\xd7\x3f\x4a\x38\x65\x2c\x93\x22\x0b\x12\x5f\x7f\x47\x0a\x0d\x0a\xbc\xd2\xa6\xe6\x0e\xb9\x7e\x6b\x80\xe3\xcf\x4b\x17\xb5\x61\xbf\xa9\xa5\x10\xda\xfd\x91\x8d\xef\x42\x53\x59\x31\x69\xcf\xba\x73\xdd\x0e\xd2\xbd\xe1\xc8\x5a\xf6\x6a\x57\x9c\x55\x3c\xaf\xa4\xaa\x51\xd5\x42\x92\x5c\x68\x84\x97\x11\x15\x2f\xda\xe1\xb6\x81\xf5\xea\x2d\x38\x27\x9b\xbd\x5d\x7d\x5f\xef\x40\xfc\x2c\x05\x68\x4b\xde\x4b\x89\x16\xe5\xf7\x46\x4b\xbc\x06\xc4\x22\x37\x60\x5b\xdd\x58\x79\x04\x36\x5d\xc8\x6f\x7f\xbf\x3b\xff\x21\x4b\x7c\x28\x2b\xc3\x6b\xb8\xc6\x20\x97\x0e\xea\x8c\x59\x53\x6e\xb2\xa2\x38\x9d\x4e\xab\xa8\xc8\xaa\xd4\x75\xe1\xa9\x0b\x54\x31\x2e\x1e\xa5\x18\x07\x02\x5e\x59\x9f\xaa\x4e\x29\x5b\x1a\x80\x86\x6c\xe2\xc5\x5d\xbc\x8f\xca\x6f\x2f\x57\x0d\xc6\x9a\xcd\xc7\x06\x23\x01\x7f\xe6\xf6\x1d\xdf\x27\x76\x9a\xfa\xc0\xf1\x7d\x70\x01\x9d\x32\xbc\xd9\x03\xfb\x12\xd7\xd8\x8b\x4d\x60\xf0\x03\xb8\xc8\x60\x31\x96\x90\x34\x8d\x25\x3a\x9a\xc4\x92\x9f\xfe\x95\xcc\x16\xa3\xe7\x41\xd5\xa7\xa9\xc5\x4b\x27\xd1\xc2\xa9\x23\x6c\xcb\x9b\x9e\xe4\x80\x91\x05\x4d\xb2\xeb\x93\x2d\x6e\xee\x5c\x93\x5d\x09\x7f\x10\xd2\x2d\x84\xff\xf7\xb8\x9c\xe4\xdc\x8c\x1d\xf3\xe9\x26\xc8\x4a\xa6\x67\xfd\x34\x63\x82\x3b\x9e\x2f\x0b\x12\xa0\xc0\xc1\x5c\x54\x38\xe3\xf4\x7e\xaf\x60\x93\xd5\x5a\x10\x14\x85\xb5\x88\x09\x4f\x11\x55\x2a\x69\xea\x9e\xc5\x76\xe6\x39\xc3\xed\x21\xd7\xc1\x7b\x23\xad\x31\x89\xd0\x46\x0b\xb1\x33\x0c\xe3\x20\xfe\x24\x5e\x48\x50\x32\x2a\x35\xc1\x47\xbf\x8a\xe2\x05\x5e\x4a\x0a\xc2\xc6\x91\x96\x08\x69\x3b\xd9\x08\xb8\xdf\x64\xf9\x6d\xc6\x8c\xa6\xeb\x09\x04\x5a\xbd\x9f\xc1\xaa\x67\x95\x87\x4d\x16\x26\xb6\x5e\x80\xd8\xb0\x45\x20\x0b\x8d\x1b\x7c\x3d\xa7\x38\x00\x6a\x65\xae\x85\x4a\xea\xba\xed\x77\xa4\x2d\x82\x09\x43\x8f\x5c\xb5\xd6\x92\x8c\x9d\x16\xe7\x54\x42\xbb\x7d\x69\x80\xd2\x9a\xd9\x2e\x0e\x4e\xbc\x71\xcc\x69\x16\x2c\xc2\xdc\x41\x5a\x12\xf3\x8d\x87\xb4\x47\x09\xa9\xb4\x76\xe3\x8b\xec\x3a\xe7\x34\x86\xdf\xb9\x45\x73\x86\x49\x96\xc6\x25\xfe\xa1\x07\x2a\xde\x29\x17\xc3\x48\x48\x5b\xcb\x81\x65\xb6\xfd\x96\x37\x25\xa8\x75\x11\x0e\x8f\x6a\xd3\x94\x8f\xb7\x91\x1f\xea\xbb\x68\x2a\x18\x55\xa2\x87\xe3\x09\xc3\x69\x12\x4d\x15\x0a\x39\xf8\x68\xba\xe0\xcc\x1d\x9c\x9f\xb1\x2f\x8f\x5c\x75\x60\x3d\xe0\xbc\x22\x22\xb0\x63\xaa\x1a\xac\xe5\x38\x40\x82\x9e\x76\x12\x93\x5c\x81\x71\xcc\xff\xcf\x09\x75\x90\xaf\x4f\xe7\x27\x17\xcb\xf5\x95\x5c\x69\x0b\x53\x0b\xf9\x83\xd9\xf6\xdf\xff\x48\xad\x43\x7c\x7a\xc9\x24\x6e\x9a\x29\x4b\xa3\xf4\xbe\x8e\x4a\x38\xdd\x77\x79\x7b\xc7\x2d\x84\xdc\xfa\x42\xe8\x92\xfc\xca\x0e\xae\x56\x68\xc2\xf0\x43\x1d\x04\x86\x73\x34\xb3\x67\xb6\x7d\xfb\xd3\xab\x1f\x5f\x90\x62\x58\x6a\x5a\x85\x65\x79\x90\xb2\xf2\xf8\x1a\xa8\xc2\x89\x1a\x1c\x67\x0d\x22\xef\x26\x23\x78\x6e\x35\xde\x90\xc5\x14\xda\x64\x27\x29\xdc\x61\x23\xb0\x0e\x95\x90\xfb\xc9\x33\x26\x1b\x49\x0d\x51\x6e\x4b\xb4\xc7\xe6\xb6\xcf\x43\x25\x9b\xbb\x80\x74\x37\x07\xe7\xda\x17\x45\x51\x21\x17\xbb\xda\x6b\x8d\xd0\xc5\x5b\x69\x7d\x85\x2b\xad\xfd\xa6\xe2\xb5\x54\xe7\xcd\xdf\x5a\x68\x7e\xfb\x96\x37\xf6\xc5\xf3\xaf\xbe\x7a\xf6\xbb\xf0\x27\x1d\x57\xb2\x7c\xf6\xbc\x1f\xdd\x20\x4c\xaa\xcd\x8d\x75\x67\x05\xe8\x72\x70\x37\x21\xb8\x6f\x28\x4d\x89\xdb\x4d\x2a\x3f\xc4\x7d\xbf\x95\xf9\xb3\xd9\xe5\x6c\x0f\xc5\x85\x75\xdc\xc9\x92\x68\x8a\x1d\xe6\x90\x45\x88\x6c\x57\xb5\x6c\x56\x74\xea\xff\x64\xc8\xdb\x76\xc6\xe6\x11\xc7\xc8\x5a\x39\x3f\x81\xd5\x35\x8c\x54\xc1\x86\x2e\x3a\x78\x4d\xa0\x12\xd9\x7e\x91\xe7\xec\x95\xbc\xc7\x76\xae\xe1\xc7\x1d\x37\x2c\xcf\x13\x40\x24\xc0\x75\xba\x1d\x52\x3f\xd2\x84\x9f\x1e\x00\xfa\x69\x45\x6c\x72\x22\x5f\x42\x9a\xb4\x67\x1d\xb0\x20\xd9\x8f\x4c\x66\x98\xfa\x00\x18\xc5\x63\xa1\xb0\x4d\xaa\x1c\xb6\xd1\x8a\xb7\x43\xfe\xf5\x85\x6e\x15\xcf\x0c\xdb\xa9\xb0\x09\x88\x4b\x54\x3b\x47\x62\x2a\x7a\x29\x6a\xff\x7a\xa4\x73\xc4\x4c\x31\x33\xaa\xbe\x43\xa8\x12\xd7\x7a\x0d\x5f\x0e\x33\x0f\x48\x94\xc1\x93\x4a\x9d\x14\x82\xd9\xa3\xc3\x9b\x83\x7d\xce\x3c\xeb\x4e\x25\xaa\xf4\xa4\xf8\x33\x31\x22\xa1\x19\xb5\x52\x47\x0f\xa3\xab\x97\x7e\xf8\x8e\xef\x2e\x9d\x58\xe4\x87\xf1\x37\x5a\xf0\x91\x7e\x79\x46\x3c\x9d\xb7\x21\x02\x21\x7b\xa7\xb9\x11\x97\x46\x64\x5d\xe0\x99\x09\x9b\x06\x0b\x62\x4f\xc9\xce\xe0\x86\xc0\x1e\x49\x42\x45\xb1\x73\x85\x5f\x06\x6d\xc9\x82\x36\xfb\xf8\xb1\x47\x7a\xbf\x9a\xc5\x02\x73\xd1\xab\x98\xeb\xa5\xa4\xc5\xc4\xc3\x7a\xf8\x59\xb5\x16\x65\x62\xd7\xfa\x08\x99\xd3\x36\x38\xf1\xf3\x42\x93\x6d\x63\x97\x4d\xcd\xf4\x92\x32\xeb\xa2\x53\x8f\xf2\x6c\x3f\x34\x72\x7f\x70\x73\x37\x53\xe3\xff\x06\x13\x0e\xc4\xeb\x66\xe6\xdd\xd4\x95\xd3\x30\x6d\xa8\x89\x5f\x52\xbe\x55\x5d\xaf\xfc\x4b\x21\x42\xc7\xb4\x64\x4c\x32\x65\x3c\x28\x8c\x6e\x85\x3e\x35\xd9\xcc\xdc\x97\x40\x9a\xd2\x2e\x63\xc6\xc0\x29\xb6\x92\x3d\xdc\x70\x23\xb1\xe5\xe6\xf8\xfc\x6a\xbb\x16\x41\xd1\x74\x10\x17\xe1\x1e\x33\x58\x80\x20\xf5\x15\xa5\x8b\x7f\xa8\x5a\x30\xf8\x6e\xe4\x52\xd1\x5b\x75\x94\xfc\x25\x37\xe0\x86\xcc\x9f\x74\xff\x13\x4f\x0c\xba\xd6\xd0\x74\xb3\xcb\x7d\xc6\xc0\x36\xbe\x5d\x23\x0c\xc4\xd9\xb5\xa0\x0c\xb6\x0c\x17\xb6\xd0\x72\xc3\x9d\x36\x17\x83\x49\x7c\x3e\x82\x07\xab\x2b\x47\x97\x75\xc0\x2e\x1b\x5f\x9f\x41\x83\x37\x7e\x7c\x35\x29\x26\xb1\x48\x2b\x53\xaa\xe9\x4b\x2e\x0d\xc0\x46\xbb\xff\x21\x08\x51\x3f\xd9\x0c\xea\xc9\x66\x59\xbb\x25\xb9\x63\x7d\x03\xa6\x12\x92\x15\x54\x5a\x06\xe0\x4c\x10\x67\xa9\x85\xbd\x56\x1e\xfb\x57\xce\xd5\xc7\x07\x7d\x1d\xba\xb7\x97\xaf\x43\x17\x3b\x0c\xdf\x71\x92\xf7\x42\x7f\x0a\x7b\x27\xc1\xae\x7d\xbd\xf9\xf0\x21\x1c\xa5\xae\xae\x1d\x71\x9d\xdc\x7d\xd4\x0c\xc6\x16\x7b\x75\x95\xa0\xbf\x45\x4a\x72\xc5\x14\xe1\x09\x32\x00\xc1\xf8\x41\xf2\x60\x1f\xb1\xf4\x79\xaa\xed\x94\xca\x15\x54\x29\x66\x7d\xfa\x27\xfb\x0b\x36\x4f\xec\x1d\x18\x73\x66\x9f\xfe\x75\xc1\x07\xea\x35\x2d\x36\x9b\x7b\xe9\x0e\xdd\xce\xb7\x98\x77\x67\x7a\x88\x20\x61\x61\xbb\xca\xcc\x71\x2a\x90\x46\xa4\xfa\xc1\x4f\xfc\x37\x87\xff\x8a\x6d\x81\x2f\x02\x7c\x61\x64\xdb\xd7\xfe\x77\xc6\xe0\xa9\xef\xa7\xfe\xc4\xcb\x3b\x7a\xe2\xe1\x64\x52\xce\xdb\xc7\x58\x21\x42\xf7\xcf\x18\xf7\x52\x37\xd4\xd2\x5f\x3e\x6e\xc5\xc5\x91\xe7\x47\x3e\x0a\xbe\x08\xb3\x91\x77\xe3\x7b\x7d\xf0\xed\xda\x96\x46\xb6\x2e\x7c\x93\xea\x2f\xce\xdf\xf3\xfb\x69\xef\x4e\x6b\x98\x67\x3b\x5b\xbc\xff\xa5\x03\x34\xc4\xed\xea\xf6\x76\xf5\x75\x9c\xf9\xa6\xf5\xbd\xaf\x00\x81\xe1\x76\xce\xbd\x6f\x78\xdf\x4f\xfb\xee\xf9\xb9\x79\x89\xba\xc6\x89\x1a\xee\xd1\xf9\x71\xf8\xa7\x41\x18\x5f\x32\xf7\x96\x1d\xa5\x95\x3b\x45\x43\x3a\xb8\x98\xda\x91\xd8\xd6\x03\xb1\xad\x1f\x22\xae\xc5\x40\x5c\x8b\x87\x88\xd5\x7e\x20\x56\xfb\x84\x18\x5b\x49\xdf\xe8\x63\xe7\xef\xdf\x78\x97\xfb\xfc\x27\x00\x00\xff\xff\x65\xa7\x97\x2f\x9c\x16\x00\x00")

func templatesBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesBaseHtml,
		"templates/base.html",
	)
}

func templatesBaseHtml() (*asset, error) {
	bytes, err := templatesBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/base.html", size: 5788, mode: os.FileMode(420), modTime: time.Unix(1455262822, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x5d\x6e\xdb\x38\x10\x7e\xf7\x29\x66\xb9\x01\xfc\xb0\x96\x18\x67\xf3\x14\x48\x5a\x60\x1f\xb2\x58\xf4\xa1\x40\xd3\x1e\x60\x2c\x8d\x6c\x3a\xd4\x4f\xc5\xb1\x13\x23\xc8\x39\x7a\x86\x9e\xa0\xef\xed\xc5\x3a\xa4\x2c\x2b\x76\x52\x34\x40\x00\x5b\x1a\x92\xdf\x7c\x33\xfa\xf8\x91\x0f\x0f\x50\x50\x69\x6a\x02\x55\x5a\x74\x2b\x05\x8f\x8f\x13\x00\x99\xee\xb0\x5e\x12\x9c\xdd\xd2\x6e\x06\x67\x5b\xb4\x1b\x72\x70\x95\x42\x7c\xed\x61\x12\x9f\xe0\x2a\x72\x0e\x25\x10\xc8\x80\x0e\x08\x80\xa4\x30\x5b\xc8\x25\xcb\xa5\x0a\x2d\x75\x0c\xe1\x19\x49\xae\x67\x17\x98\xca\x02\x50\xa0\x8b\x0d\x73\x53\x0f\xe8\xdc\x36\x8e\x14\x14\xc8\x18\x15\xc6\x55\xe6\x40\xa1\xb2\x1f\x5f\x12\xdd\xa3\x87\x64\xcf\x37\x74\x31\x94\xd6\x52\x3b\xeb\xfb\xa4\xba\x38\xf4\xbc\x8f\xc7\x68\xf2\x44\x07\x36\x6c\xc9\xeb\xf0\xf2\xf2\x02\x5d\x58\x9d\x24\x7f\x14\x4d\xce\xbb\x96\x60\xc5\x95\xcd\x26\x49\xff\x92\xaa\x2b\xc2\xa2\xef\x2a\x09\x64\xd9\xcd\xa7\xeb\x0f\xbe\x2e\x53\xd5\x5a\xe4\xb1\x48\x2c\x44\x89\xee\x41\x7d\x42\x45\x8c\x50\x63\x45\xa9\xda\x1a\xba\x6b\x1b\xf9\x58\xc8\x9b\x9a\xa9\xe6\x54\xdd\x99\x82\x57\x69\x41\x5b\x93\x53\x14\x06\x33\x30\xb5\x61\x83\x36\x72\xb9\x48\x93\xce\xf7\x62\x26\xd6\xd4\xb7\xb0\xea\xa8\x4c\xa7\x2b\xe6\xf6\x4a\xeb\x52\x58\x5c\xbc\x6c\x9a\xa5\x25\x6c\x8d\x8b\xf3\xa6\xd2\xb9\x73\xff\x94\x58\x19\xbb\x4b\xdf\xb7\x54\xff\x75\x83\xb5\xbb\xba\x3c\x3f\x9f\xfd\xdd\xff\x0d\xa3\x35\xf9\xec\x72\x88\xa6\xd0\x91\x4d\xa7\x8e\x77\x96\xc4\x07\xc4\x53\xf0\x1a\xa4\x53\xa6\x7b\xf6\x6c\xd3\xa7\xf5\xc3\x92\x1a\x96\x54\xc8\x55\x63\xae\xea\x1b\x54\xda\x31\xb2\xc9\x3d\x46\x2f\x9a\x86\x1d\x77\xd8\xc6\x95\xa9\x63\x9f\xf5\x46\x42\x6c\xdb\x67\x34\xaf\x48\xf3\x6a\x45\x78\x47\xae\xa9\xe8\xa8\x95\x44\x0f\xfb\x9b\x2c\x9a\x62\x97\x3d\x33\xb9\xdf\x2d\x14\xaf\x74\x0a\x4c\xd1\x0f\x65\xf3\x46\x93\x1f\x41\x6d\x74\xef\xa2\xf9\xc5\x61\x15\x8e\x7d\xb2\x3f\x94\xf1\xe0\xe8\x67\x80\x81\xfd\x29\xe4\x60\xfb\x43\xd8\xc7\xa5\x48\x4b\xdd\x50\xbb\x1f\xfd\xa2\xad\xe1\x0b\xc6\xb6\x92\x76\x58\xf5\xea\x47\xd5\x86\xa9\x80\x10\xe6\x52\xff\x08\xfa\xfd\x2b\xbc\x13\x69\xe1\x23\x75\xdd\x6e\x9c\xfd\x36\x72\xe1\x5e\x70\xef\x4c\x27\xd6\x5c\x1a\x5e\x6d\x16\xc1\x90\xb7\x92\xc9\x3e\x51\xbb\x4d\x29\xac\x89\x39\x34\x8c\x50\x62\xd4\x43\x65\x5e\x9b\x0c\xfe\x0b\x83\x44\x63\xf6\xb6\x32\x5a\xae\x16\xb9\xb2\x54\xf6\x7f\x78\xff\x96\xf0\x4f\x6e\x5a\x95\xfd\x8b\xb9\x38\xb2\x91\x5f\x7b\x94\x91\xe8\x36\x7b\x69\x2b\x7a\xc5\xf7\x23\x97\x77\xa6\x65\x70\x5d\x3e\xf6\x87\x6b\xbc\x3f\x3d\xa0\x7e\x4e\x5b\xb3\x70\x7a\xfd\x79\x43\xd2\xef\x3c\x9e\xcf\xe3\x8b\xfd\x28\x38\x73\xed\xbc\x1c\x3d\xe1\x0b\xec\x83\xab\xd7\xa7\x87\xeb\xf5\x79\xfe\x0c\x9d\xa2\xe5\xfe\x0d\xf6\x97\xf3\x10\x2e\xbe\xf1\xba\xfc\x19\x00\x00\xff\xff\xac\x4a\x10\x82\x55\x06\x00\x00")

func templatesConfigBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigBaseHtml,
		"templates/config-base.html",
	)
}

func templatesConfigBaseHtml() (*asset, error) {
	bytes, err := templatesConfigBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config-base.html", size: 1621, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x10\xba\x6b\xc1\x36\x60\x27\x27\xd8\x65\x3b\x0d\x58\xb1\x6e\x3f\x40\x91\xe8\x54\x18\xf5\x01\x99\x6e\xd3\x15\xfd\xef\xa3\x6c\xc7\x8e\x31\xf8\xb2\x1e\x82\x90\xe2\x7b\x8f\x8f\x04\xfd\xf2\x02\x0e\x5b\x1f\x11\x14\x7b\x26\x54\xf0\xfa\xfa\x2d\x9d\x7d\x94\x02\x46\x27\xd9\xee\x06\x62\x53\x64\x8c\x5c\x41\xbb\xc6\xf9\x47\xb0\x64\xba\xee\xa0\x4a\x7a\x52\xc7\x1d\x40\x93\xaf\x2f\x84\xc6\x01\xe3\x85\xb5\x15\x02\x96\x31\x0e\x3d\xa3\x53\xc7\xfb\x5f\x5f\x7f\xc0\xd0\xa5\xd9\xe7\x81\x77\xa3\x65\x13\xe9\x4b\xa7\xdf\x7f\x80\x1a\x05\xa7\x3f\x5d\x83\xd4\xb6\x1d\xb2\xfe\x38\xb4\x12\x52\x9b\x4a\x00\x63\xd9\xa7\x78\x50\xe2\xb2\xe0\x23\x96\x4e\x6c\x52\x95\xae\x26\x15\x04\xe4\x87\xe4\x0e\xea\xee\xfb\xfd\xcf\x89\x57\x99\x1e\xc9\x89\xd6\xf5\x61\xed\xa0\xea\xea\x73\x49\x7d\x56\x0b\x40\x20\x64\x4e\x48\x20\xd5\x83\xc2\x60\x3c\xa9\xc5\x72\xe4\x22\x1e\x07\x80\x3a\x7e\xa9\xc5\x66\x3f\x64\x2b\x01\x1f\x73\xcf\xab\x2e\x13\x13\x86\x8a\xa6\xb3\x02\xef\x66\x75\x7e\xce\x38\x27\xd1\x84\x25\xc9\x64\x2c\x3e\x24\x72\x28\x5e\x7e\x3f\x13\x7e\xc6\x8b\x09\x99\xf0\x9d\x4d\x41\x81\xe9\x39\x59\x93\x3d\x1b\xf2\x7f\x84\x15\x53\xc4\x9b\x51\x9a\xbd\x0c\xfb\xdf\xa3\x67\x01\x3e\xa5\xe2\xb6\xa6\xbf\x9b\xea\xdb\x0b\xa8\x23\xfe\xa3\xb2\xb1\x8e\x71\x07\x0b\x7a\x5c\xc3\x9c\xbf\x69\xa8\x53\xcf\x9c\xe2\xd4\xa2\xeb\x4f\xc1\xf3\x6c\xe7\xc4\x11\xe4\xa7\xe5\xf2\x4d\x4f\xac\x8e\xd3\xb9\x8e\x9c\x8d\xb6\xcd\x7e\x7d\x58\x92\x4b\xeb\xe1\xc0\x47\xd8\xf4\xb7\x7c\x5b\x7f\x03\x00\x00\xff\xff\xcb\x1a\x0e\x96\x7f\x03\x00\x00")

func templatesLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginHtml,
		"templates/login.html",
	)
}

func templatesLoginHtml() (*asset, error) {
	bytes, err := templatesLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login.html", size: 895, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x4d\x93\xdb\x36\x0c\xbd\xe7\x57\x60\x74\xae\xd7\xdd\x9e\xbd\x9e\x4e\x3b\xdb\x63\xeb\xe9\xa6\xb9\x53\x22\x64\xa1\xa6\x48\x0e\x09\xd9\xeb\x64\xf2\xdf\x0b\x52\x1f\xfe\x4c\xe2\x6d\x9d\x5e\x34\x22\xf9\x08\x02\x0f\x78\x24\x3e\x7d\x02\x8d\x35\x59\x84\x82\x89\x0d\x16\xf0\xf9\xf3\x0b\x72\xe7\x65\x01\xad\x96\xd1\xbb\x23\x48\xe5\x2c\xa3\xe5\x04\x7a\x07\xb0\xd0\xb4\x85\xca\xa8\x18\x9f\x8a\xe0\x76\xc5\x52\xe6\x4e\x67\x2b\x67\x66\xaf\x71\xf6\xf8\xd3\xb0\x26\xab\x7e\x5c\x33\xa8\x34\x30\xbe\xf2\xac\x12\x93\x18\xfa\xff\xb6\x63\xd4\xc5\xf2\xe5\xaf\xdf\xfe\x84\xec\xc7\x62\xee\x2f\xf7\x2a\x83\x81\x21\x7f\x67\x64\x6b\x07\xc9\x58\xb1\x7c\xdf\x50\x04\xe3\xdc\x46\xbe\xb4\x41\x50\x60\x71\x07\x64\x23\x2b\x5b\x21\xb8\x1a\x92\xdd\x07\x58\x09\x3c\x22\x04\x5c\x53\x4c\x27\xef\x5d\x17\x40\xe9\x96\x2c\x74\x51\xc6\x4a\x02\x97\x50\x6b\x5a\x77\x01\x81\x1b\xb1\xe4\xbd\xa1\x4a\x31\x39\x0b\x25\x1a\xb7\x7b\x38\xf6\xab\x76\xa1\x1d\x5d\x4b\xff\xb3\xc6\x05\xfa\x28\x5c\x29\x53\x80\xaa\xd2\xae\xa7\x42\x68\x0c\xb8\xc5\x10\x7b\x1e\xc5\x78\xa2\xb1\x80\x16\xb9\x71\xfa\xa9\x58\xfd\xf1\xf2\x7e\xa2\x29\x19\x25\x34\x3a\x22\x1f\xa6\x4e\xb9\xcd\x07\xad\x83\xeb\x7c\x71\x0c\x11\x90\x51\xe2\x22\xc8\xfa\x53\x81\xad\x22\xf1\xe1\x3c\x1d\x90\xfe\x5a\x3d\x4b\x3f\x96\x83\x0c\xf2\x9e\x62\xf9\x9c\xf0\x8b\x79\x1e\x9d\x59\xbd\x96\xd6\xd1\xce\xe3\x8f\x67\x3e\x08\x9e\xac\xef\xf8\xc4\xd9\xe1\xac\x02\x48\x4f\x9e\xf1\xde\xe3\x34\xb0\xaa\x3d\x0c\xbc\x51\x15\x36\xce\x68\x94\x38\x36\x7b\x83\x3f\xe3\xab\x6a\xbd\xc1\x87\xca\xb5\x42\x6b\xc7\xae\x52\x9e\x84\x63\xfa\x28\xbb\xac\xb3\x78\x4e\xc4\x5c\x7c\x3e\xa1\xef\x62\xe2\xad\x7c\x7a\x81\xee\x5c\xd0\x6f\xa0\x74\x35\x6c\xb9\x27\xab\x89\xc0\x0b\x57\x4e\x39\xee\x89\x3d\x80\x7a\x6e\xa7\xf1\x37\x98\x92\xa9\xe8\x95\xcd\x07\x35\x68\xfc\x2f\xc6\x55\x9b\x2f\x07\xed\xea\x5a\x2a\x55\x62\x4f\xd8\x59\x99\xc1\xcb\xdf\x1d\x44\x11\x30\x65\x2d\x45\x0e\x8a\x2c\xc7\x1f\xe0\xef\x2e\x72\x92\x99\xa8\x73\xed\x9c\x86\x98\xd4\x9f\xe4\x29\x2a\x84\x4a\xce\x0c\xd8\x62\x5b\x62\x10\x89\x25\x1f\xee\x96\xc0\x9b\x33\xf6\x81\x22\x95\x64\x88\xf7\xf7\xc9\xd9\xf1\x35\xa9\x34\xb9\x0b\xc4\xe8\xe2\xe5\xfc\x49\xc6\xb7\x93\x5f\x33\xdf\x95\x72\x1f\x8d\x59\xee\xad\x0e\x29\x3e\xa0\x0a\xd8\x2a\xd3\xa5\xac\x0f\xe8\xaa\xc1\x6a\x83\xfa\xda\x31\xab\x0c\xb9\xf4\xeb\x1a\x01\x57\xeb\xe5\x3b\xc5\x19\x68\xab\x18\x6f\x0e\x74\x80\x5f\x8d\xb0\x5f\xfb\x6f\x21\x7e\x45\x14\xc7\xa5\xff\x6c\x55\x69\x10\x06\x77\xa6\x17\x28\x02\xd5\xb9\xcc\x77\xca\x32\xb0\x83\x86\x34\x42\x7a\x14\xf6\xdc\x90\x5d\x43\x1d\x5c\x9b\xdf\x9b\x3e\x63\x57\x14\x70\xef\x5b\xed\x66\x51\xfc\xda\x3f\xfd\xf0\x2c\xd2\xd4\x5a\x9c\xbd\x59\x1b\x8f\x37\x6a\x23\x57\x67\xe9\x5e\xff\x6d\xd9\xa4\x4b\x43\xfb\xc6\xb1\x8b\x63\xbd\x4c\x26\xa7\xa7\xe5\x00\xb9\x66\x2d\x07\x07\xab\x0c\xb8\x9b\x16\xee\x12\xd7\x56\x2a\xe5\x1b\x71\x0d\x90\x2f\xc7\xf5\x21\x03\xfe\x1f\x01\x8c\x55\x02\x43\xcb\x08\x3b\x32\x46\x3a\x36\x69\x9d\xc0\x53\xc5\xd2\x58\xc5\xdc\x67\xf5\x5e\x27\x31\x94\x08\x59\xd2\x26\x09\xa6\xef\xc9\x72\x1b\x58\x23\xea\xef\xaa\x84\xaf\xdd\xe7\xe3\xcb\x76\x59\xb9\x65\xc7\x2c\xdd\x60\x9f\x90\xd8\x95\x2d\xf1\x44\x45\xc9\xd2\x26\xb2\x9d\x49\xdf\xac\x3a\xc3\x59\x3d\x7d\x37\xb9\x98\xf7\xfb\xde\x16\xc9\x62\x7e\xde\x0d\xca\x8c\xc4\x33\x74\xdc\x23\x78\xf8\x39\xb4\xee\xff\x04\x00\x00\xff\xff\x4f\xa8\x5e\xdf\xde\x0b\x00\x00")

func templatesRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesRegisterHtml,
		"templates/register.html",
	)
}

func templatesRegisterHtml() (*asset, error) {
	bytes, err := templatesRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/register.html", size: 3038, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSettingsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x4f\x73\xeb\x26\x10\xbf\xbf\x4f\xb1\xa3\xe9\x55\x4e\xd3\x77\xeb\x38\x3e\xa4\x79\x6d\xdf\x29\x99\x38\xcd\x1d\xc4\xda\xa2\x41\xa0\x02\xb2\xe3\x7a\xfc\xdd\xbb\x20\xc9\x96\x64\xc7\x7f\x9a\xbc\xc9\x21\x0e\xec\xfe\x80\xdf\xfe\x15\xac\xd7\x20\x70\x26\x35\x42\xe2\xa5\x57\x98\xc0\x66\xb3\x5e\x8f\x9e\xc2\x38\x8c\x00\xb5\x20\xd1\x97\x0e\x2e\x33\xda\xa3\xf6\x49\x23\xfe\x69\xae\x0c\x67\x0a\x7e\xbd\x81\xd1\x14\xbd\x97\x7a\xee\x5a\x95\x6b\xe7\x5d\xe5\x3d\xff\x1b\x33\x1f\x20\x63\x21\x17\x90\x29\xe6\xdc\x4d\x62\xcd\x32\x99\x7c\x01\xe8\xca\x32\xa3\xd2\x57\x97\x5e\xff\x12\x35\x7d\x5d\x8b\x1f\xca\x87\x6b\x86\xfa\x92\x69\x54\x10\x7f\x53\xa9\x67\xa6\x03\x3b\x00\x4c\x73\x64\x82\x48\xf7\x50\x84\xcb\xbf\xf6\x61\xb5\xef\x26\xb7\x95\x54\x02\xbe\xd3\xb6\xb6\x60\x5e\x1a\x3d\xbe\xca\xbf\xf6\x0e\xb8\xa2\x13\x8e\x9f\xc8\x8d\x58\x0d\x8f\xf3\x8c\x2b\x6c\x61\xf5\x24\xfe\xa6\x14\x0b\x81\xda\xa1\x18\xac\x08\x6b\xec\x50\x14\x84\x62\x32\x76\xde\x1a\x3d\x9f\x3c\xa3\x75\x91\x61\x33\x1f\x5f\x91\xf2\xe0\x8a\xf5\xba\x89\xf1\xa8\x59\xb3\xd9\x1c\x02\x93\x6c\xef\xc8\x93\x2c\x1e\x71\x21\xcf\xa3\xd1\x9a\xcf\xd4\x92\xad\x5c\xba\xb4\xac\x4c\x3a\xd4\xa2\xeb\xff\x90\xfe\x4f\xe6\xf2\x0f\xe4\xf7\x24\x0b\xbc\xc8\x45\x91\x47\x58\xf5\x81\x24\xee\x98\x67\x70\x27\x2d\x95\x8d\xb1\xab\x8b\xe8\x84\xa5\xb4\xf2\x5c\x32\x24\x09\x79\x75\x24\x65\x7b\xd3\xce\xa4\x3b\x0c\xe9\xdf\x86\x2b\x8c\xd3\xdc\x58\xf9\x2f\xb5\x0d\xa6\x12\x60\x59\x28\x8c\x9b\x84\xfa\x83\xc5\x05\x25\x14\xb5\x94\xb6\x4f\x84\x9e\x92\x40\x81\x3e\x37\xe2\x26\x79\xb8\x9f\x3e\x1d\xac\xf1\xb8\xe7\xdc\x9a\xaa\xec\x16\xb9\x62\x9c\x2a\x7b\xd8\x06\x20\x8c\x0a\x91\x86\x81\x26\xbf\xa9\x34\xe2\x92\xc9\x33\xe5\x1d\x97\x4a\x7a\x72\x68\x14\x1d\xee\x17\x7b\x1b\x5d\xff\xfc\x66\xcb\xb0\xd4\x2b\xcc\xb0\x76\x07\x7b\x37\x52\xa9\xcb\xca\x83\x24\x2b\x17\x5b\x1e\x69\x59\x71\x25\xb3\x04\xfc\xaa\xc4\x76\x37\xd0\xac\xc0\x2e\x2a\x81\x05\x53\x15\x89\x5a\x34\x39\x52\xce\x00\xff\xd9\xb5\xdb\xd1\xce\x36\xd8\xc2\x36\x9b\x2c\xc7\xec\x05\xc5\x7a\x4d\x3d\x7d\xb3\x99\xc0\x80\xd3\x43\x04\x0e\xd2\x61\x8f\xfd\xd1\x0e\xf6\x6e\x07\x58\xb9\x60\x1e\xcf\xf6\x40\x0b\x3f\xe5\x82\x16\xb7\xe7\x83\xa1\x0b\x6a\xe0\xe5\x3e\x70\xd4\xbb\x5b\x27\xe4\xa8\xca\x94\x2b\x93\xbd\x24\x93\x6f\x3a\x36\xeb\x86\x00\x48\xed\x3c\xd3\x19\xba\x40\x77\x65\x2a\x58\x32\xed\xc1\x1b\xc8\xa5\x40\x08\xd5\xb0\xf2\x39\xd1\x87\x99\x35\x05\xf8\x9c\x56\xc6\xa0\x8c\xa8\xe6\xe9\x84\xd3\x55\xf8\x03\xea\xe4\xb7\xfa\x73\x0f\xdf\x0a\x8e\x22\x7c\x0b\xcf\x2a\x97\xeb\x33\xca\x25\xc6\x82\x9b\xd7\x4b\x13\x06\x03\x93\x32\x37\xde\xb8\x36\x53\xb6\x5b\x35\xc9\xd2\x83\xd4\xd9\xb1\x4b\x8d\x68\xc9\x43\x54\x9e\xcc\x88\x88\x85\x1a\xfc\xae\xd2\x78\x97\xb1\x0b\x4a\x8f\x13\xc6\xb6\x90\x83\xc6\x3e\x47\xe5\x99\xc6\xd6\xe0\x0f\xac\x81\x36\x71\xa0\xb9\x39\xc2\x52\x2a\x05\x4c\x29\xb3\x84\x52\x66\xbe\xb2\x54\x10\x8c\xee\x99\xb5\x0d\xa1\x1e\x38\x42\xac\x77\x15\x6a\x26\x54\x8a\x85\xe9\x5f\xbf\x3f\xc2\x0c\x51\x7c\x66\x31\x7c\x2f\x4a\x63\xfd\xfb\x2a\xa0\xec\x31\x6a\x0f\xa0\xc6\xe0\xa9\x4d\x0f\xb2\x83\x41\x6e\x71\x36\xf8\x58\xe6\xd2\xf3\x8a\xc2\xe8\x53\x19\xe9\xc4\xaf\x66\x43\xad\xee\x1c\xd3\x2d\x64\x7c\xc5\xfa\x51\x2b\x3f\xc5\x6f\xb7\x2c\x7b\xa9\x4a\xf7\xb9\x8e\x13\x74\x17\xe2\xcc\x61\xca\x23\x9b\xda\x6d\x35\x33\xb8\x6b\x74\xc7\xfc\x75\x24\xc7\x1f\xd1\xd1\xd5\x0c\x77\x7d\xfb\xee\x16\xea\x53\x80\xaf\xc8\x9e\x72\x15\xf2\x3f\x28\x66\x32\xe6\x34\xe5\xf8\x38\x33\x02\x0f\x5f\xd5\xa2\xe6\x7f\xe6\xf9\xfe\x03\xe8\xc2\xd0\xbe\x79\xf9\x71\x45\x27\xc4\x66\x36\xa3\x1e\x93\xd6\x73\x35\xdf\xce\xfb\x21\xe3\x95\xf7\x46\x37\x7d\xcb\x55\xbc\x90\x94\xad\xcd\xe6\xdc\x6b\xa0\xbf\x94\xde\x95\xac\x52\x3e\x99\x4c\xd9\x82\xfc\x5f\x2f\x99\x50\x04\x77\xb8\xe4\x40\x34\x2b\x1b\x1e\x70\x02\x5f\xeb\x38\x66\xe1\xbb\xaa\x7a\xe1\x7b\xfb\xaa\x1a\x0c\x8f\x8f\xcd\x5a\xd8\xfc\xdb\xbd\x76\xff\x0b\x00\x00\xff\xff\x75\x5f\x3f\x21\x16\x0f\x00\x00")

func templatesSettingsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSettingsHtml,
		"templates/settings.html",
	)
}

func templatesSettingsHtml() (*asset, error) {
	bytes, err := templatesSettingsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/settings.html", size: 3862, mode: os.FileMode(420), modTime: time.Unix(1455428682, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesShitbucketImportHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x52\xc1\x8e\x1b\x21\x0c\xbd\xe7\x2b\x2c\x2e\x3d\x4d\x50\x7b\xac\x32\x39\x54\xbd\x54\xaa\xd4\xaa\xbb\xfd\x00\x06\xbc\x3b\x68\x19\x8c\xc0\x6c\xb3\x8d\xf6\xdf\x6b\xc8\x74\x92\x1c\x46\x63\xfc\xcc\x7b\x7e\xc6\xe7\x33\x38\x7c\xf2\x11\x41\xb1\xe7\x80\x0a\xde\xdf\xcf\xe7\xfd\x63\x8b\x5b\x04\x18\x9d\xa4\x76\x37\x75\x96\x22\x63\xe4\x56\xb9\x3b\x38\xff\x0a\x36\x98\x52\x46\x95\xe9\x8f\x3a\xee\x00\x6e\x73\x96\xc2\x70\x2a\xc3\xc7\x4f\x1d\x11\xec\x89\xf2\x02\xc6\xb2\xa7\x38\x2a\x21\xcd\xf8\x8a\xb9\x08\x6b\x99\x3d\x4f\xd5\xbe\x20\x0f\x7e\x49\x94\x3b\xbf\x82\x05\x79\x26\x37\xaa\x9f\x3f\x1e\x1e\x57\x8e\x7b\x85\x46\x38\x3c\x67\xaa\x69\x83\xa5\x20\x98\x09\x03\x08\x36\xaa\x9a\x83\xba\xb6\x13\x39\x4b\x4b\x1d\x56\xc7\x87\x4d\x13\x7e\xff\xfa\x7e\xd0\x3d\x7d\xc3\xe2\x63\xaa\x7c\x27\xb4\x12\x28\xf0\xae\x33\x0f\xa5\x4e\x8b\x97\x5e\xf9\x2d\xe1\xa8\x18\x4f\x12\x47\xb3\xe0\xaa\x9b\x82\xb1\x38\x53\x70\x28\x9d\xcc\xcc\xa9\x7c\xd6\xfa\x6a\x75\x8f\x27\xb3\xa4\x80\x7b\x4b\x8b\x36\xc9\x6b\xb9\x54\x14\x98\xca\x64\xe5\xc8\x26\xf8\xbf\x42\x15\x29\xe2\xad\xbb\x92\x4c\xec\x1d\xcc\x18\xd2\x97\x40\xf6\x65\x73\xd8\x32\xc3\xd4\x53\xc7\xaf\x14\x3f\x70\x1b\xc2\xb3\x18\x64\x02\xe3\x1c\x98\xf8\x06\x93\x29\xde\x36\x91\x19\x6c\x46\x57\x1a\xc6\x33\x5e\x66\xd0\xb8\xb7\x39\x6b\x19\xf4\x76\x98\x2a\x33\xc5\xd5\xe9\x7f\xdf\xab\xec\xc4\x11\xe4\x1b\x64\x47\x4c\x0d\xac\x8e\xdf\xfa\x1b\x1e\xf4\xe5\xd2\xfa\xf8\xba\xcd\xb0\xaf\xc8\x85\x78\xfd\x5d\xb7\xec\x5f\x00\x00\x00\xff\xff\x99\x01\x3c\x28\x8e\x02\x00\x00")

func templatesShitbucketImportHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesShitbucketImportHtml,
		"templates/shitbucket-import.html",
	)
}

func templatesShitbucketImportHtml() (*asset, error) {
	bytes, err := templatesShitbucketImportHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shitbucket-import.html", size: 654, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTagIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x50\xbb\x4e\xc4\x30\x10\xec\xf3\x15\xab\x15\x05\x14\xc9\x09\x4a\x94\xa4\x81\x06\x09\x5d\x81\xe0\x03\x4c\xbc\xe7\xb3\x64\xd6\x92\xbd\xe4\x0a\x2b\xff\xce\xda\xba\x88\xab\xac\x79\x78\x66\xec\x52\xc0\xd2\xc9\x33\x01\x8a\x97\x40\x08\xdb\xf6\x69\x5c\x56\x9e\xd8\x2a\xe8\x6e\x1c\x4b\x64\x21\x96\xea\xe9\x46\xeb\x57\x58\x82\xc9\x79\xc2\x14\x2f\x38\x77\x00\xb7\xdc\x12\x43\x1f\x5c\xff\xf8\xd4\x14\x80\x52\x92\x61\x47\x70\x27\xc6\xc1\xf3\x04\x43\x6d\xd1\x9c\xaa\x8d\x66\xbf\xf5\x2d\x8c\x70\x4e\x74\x9a\x50\x7b\x13\xad\x94\x72\x9d\x66\x5c\xbf\x7a\xba\x20\xa0\xb7\xd8\x32\x86\xb7\x57\x9d\x81\xb3\xda\x1a\x3c\x9a\x1f\x52\x02\xee\x4b\x69\xf8\xeb\xe3\xfd\x25\xfe\xb2\x6c\xdb\xc3\x78\x30\xfb\x06\x0a\x99\xae\xa5\xc7\x28\x67\xcf\x6e\xd8\x15\xb6\x4d\x18\x0f\xfa\x88\xb9\xbb\x1e\xff\xdf\xf0\x17\x00\x00\xff\xff\x1d\xd1\x06\x3d\x29\x01\x00\x00")

func templatesTagIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTagIndexHtml,
		"templates/tag-index.html",
	)
}

func templatesTagIndexHtml() (*asset, error) {
	bytes, err := templatesTagIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tag-index.html", size: 297, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlEditHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\xc1\x6e\xdb\x30\x0c\xbd\xf7\x2b\x08\x61\x57\x27\xe8\x8e\x43\xe2\xc3\xd0\x6e\x18\x30\x60\xc3\xda\x7d\x00\x2d\xd1\xb1\x30\x59\x32\x24\x3a\x4b\x5a\xf4\xdf\x47\x29\xae\xe7\x36\x1d\x8a\xa1\x87\x20\x12\xf9\xa4\xf7\xf8\x44\xfa\xfe\x1e\x0c\xb5\xd6\x13\x28\xb6\xec\x48\xc1\xc3\xc3\xb5\xb1\x6c\xfd\x0e\x24\xb7\xfa\xf9\xe3\xeb\xea\x36\x27\x24\x2e\x7b\xf2\x46\x16\x17\x8b\x53\x3a\x78\x26\xcf\x6a\x0a\xbf\x1b\xa3\x83\x0f\xdb\x72\x30\x87\x36\xc6\xee\x41\x3b\x4c\x69\xab\x62\xf8\xad\xea\x0b\x80\x65\x4c\x07\x57\x1d\x52\x75\xf9\xbe\x64\x24\xd7\x86\xd8\x3f\x26\xf3\xba\xea\x42\xb4\x77\x42\x82\x4e\x01\x6a\xb6\xc1\x6f\x95\x10\x45\xda\x53\x4c\x22\x40\x08\xab\x84\x7b\x51\xae\xac\x51\x45\xc0\xea\xcb\x95\x70\x2b\xe8\x89\xbb\x60\xb6\xea\xfb\xb7\x9b\xdb\xe9\xfe\xa7\xec\x85\x60\x17\xc3\x38\xcc\x69\x01\x38\x6c\xc8\x81\xe4\xb6\x8f\x9e\x3c\x13\x0b\xb9\xe8\x28\x9b\x82\x54\x75\x31\x68\xb3\x2e\xbb\xc5\x3d\x2f\x94\x79\xb9\xe0\x11\x84\xf5\xc3\xc8\x60\xcd\x73\xa2\xa2\x6b\x22\x51\xc0\xc7\x81\x04\x41\x07\x71\xd9\x63\x4f\x33\x7a\x8f\x6e\xa4\xec\x46\x29\xba\xa8\xc8\x65\x0f\x0e\x35\x75\xc1\x19\x92\x0a\xae\x0f\xd8\x0f\xf2\x7c\xf9\x3d\x0a\x62\x59\xe9\x5a\x24\xce\xbe\x3c\xd9\xfc\x97\x49\xb8\x4b\xaf\x7b\x24\xa0\x37\x5a\xb4\xa4\x79\xd5\xa1\x02\x9e\x0d\x3a\xb5\xc5\x67\xe2\x2c\xe3\x53\x88\x57\x36\x89\x4b\x47\x38\xb3\x4b\x87\x5e\xf8\x28\x56\x49\x5b\xf2\x9a\xc0\x09\x12\x72\xd4\x3a\xe9\x37\x69\xc1\x91\x83\xc6\xc1\x4a\x3f\xda\x3b\xb9\xdb\x07\xff\x4f\x4b\x65\x9b\x06\xf4\x45\x7d\x47\x6e\xf8\xe8\x82\xfe\x75\xe6\x54\xb6\xaa\xac\x42\xdb\x26\x62\xb1\x2e\x63\xab\xa6\x80\x8b\x6f\xd0\x8f\x89\xa1\x21\x48\x34\x60\x44\x26\x03\xcd\x11\x10\xe4\x72\x2d\x7d\x97\x39\x5e\x7e\xc5\x66\x64\x0e\x7e\xb2\x27\x8d\x4d\x6f\x79\xa6\x6f\xd8\x83\xfc\x2a\x19\x64\x1c\x1d\xab\xfa\x46\x86\x68\xb3\x3e\x1d\xa9\x37\xb8\xc0\x29\xe8\x22\xb5\xe7\x63\x67\xbd\xa1\x43\x9e\x7c\x55\x6b\x14\xb3\xdc\x66\x8d\xd3\x18\xaf\xf3\x03\x95\x61\x3f\x09\x9a\xfe\xfe\x7e\x42\xfe\x04\x00\x00\xff\xff\xf9\xb1\xfb\x6f\x79\x04\x00\x00")

func templatesUrlEditHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlEditHtml,
		"templates/url-edit.html",
	)
}

func templatesUrlEditHtml() (*asset, error) {
	bytes, err := templatesUrlEditHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-edit.html", size: 1145, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\x4d\xab\xdb\x30\x10\xbc\xfb\x57\x2c\xe2\xd1\x9b\x1d\xda\x63\xeb\xf8\xd0\x42\xa1\xd0\xf6\xd0\xbe\x16\x7a\x54\xe5\x75\xbc\x44\x96\x8c\xb4\x4e\x02\xc6\xff\xfd\xad\x3f\x63\x42\x4e\xf6\xcc\x7e\xcc\xcc\xaa\xef\xa1\xc4\x8a\x1c\x82\x62\x62\x8b\x0a\x86\x41\x38\xaa\x20\xfb\x16\x5f\xf5\xe9\x2f\xe1\x75\xa6\x32\x41\xd9\x4f\xdd\xe0\x0c\xd1\x46\x1c\x86\x1f\xe4\xa8\xd1\x96\x22\x93\x81\xcf\xde\x9f\x1b\x1d\xce\xe4\x4e\x63\x83\x2b\x97\xce\xe9\x27\xd9\x29\x19\xef\x18\x1d\x8f\x5a\x49\x5e\xd2\x05\x8c\xd5\x31\x1e\x55\xf0\x57\x55\x24\x00\x7b\xce\x78\x9b\xde\x62\xfa\xfe\xc3\x54\x01\xe8\xfb\xd1\xdb\x17\xdf\x39\x96\xe9\x99\x81\x97\x88\xcc\x22\x1b\xe1\xe3\x11\xb2\xdf\x2b\xd8\x1a\x82\x76\x27\x84\x97\x2e\xd8\xa9\xe1\xcf\xaf\xef\x5b\x71\x9a\x67\x6c\x5a\xab\x59\xac\x49\x4b\xda\xea\xc0\xa4\xad\x02\x87\xd7\xc9\xea\x8d\x41\xc9\x8c\x9a\x37\xa8\x75\xbf\xda\xe9\xde\xbd\x2c\x71\x47\xf4\x2c\xdb\x23\xff\x98\x6f\xaa\xb7\x6b\x75\xd4\x4e\x9b\x8e\xb1\x54\xc5\x57\xc9\x5c\x8e\x0a\x73\x7a\x11\x79\x57\xa3\xb5\xd4\x7e\xca\x0f\xed\xb6\xfa\x20\xbb\x67\xb0\xfb\xed\xfb\xf9\xb9\x92\x27\xdb\x8d\xbc\x04\x06\x55\xbc\xd6\x18\x10\x28\x82\xf3\x5c\x4b\x26\x98\xf0\xff\x8e\x21\x92\x45\x67\x30\x83\x7f\xbe\x03\xa3\x1d\x50\xd3\xfa\xc0\x50\x6a\xd6\x50\x05\xdf\x80\x4c\x60\x80\x88\xe1\x42\x06\x23\x90\x03\x21\x20\xd7\x50\x07\xac\x8e\x4a\x3c\x07\xbc\x60\x88\x72\xe0\xb8\x1d\x6f\x18\x54\xb1\xa2\xfc\xa0\x8b\x6c\x8b\xb1\xbf\xe2\x92\x62\xf9\xdc\x2b\x6f\x01\x00\x00\xff\xff\x90\xb0\x4c\xc4\xb9\x02\x00\x00")

func templatesUrlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlIndexHtml,
		"templates/url-index.html",
	)
}

func templatesUrlIndexHtml() (*asset, error) {
	bytes, err := templatesUrlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-index.html", size: 697, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlNewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x08\x5d\x76\x72\x8d\xf6\x38\xd8\x39\xec\x3c\x60\xc3\x96\x1d\x76\x94\x65\x3a\x16\x26\x4b\x82\x44\x75\x69\x83\xfe\xfb\x28\xc5\x49\xed\xa5\xc0\x90\xa1\x07\xc3\xa4\x48\x3d\x3e\x3e\x89\x3a\x1e\xa1\xc7\x41\x5b\x04\x41\x9a\x0c\x0a\x78\x79\x39\x1e\xef\x76\xd9\xce\x16\xa0\xed\x79\x69\xb3\xc8\x53\xce\x12\x5a\xca\x99\x9b\xa6\xd7\x8f\xa0\x8c\x8c\xb1\x15\xc1\xfd\x16\xdb\x0d\xc0\x72\x4d\x39\x53\x1d\x62\x75\xff\x50\x22\x1c\x1b\x5c\x98\xce\xc1\x6c\x57\xa3\x0b\xfa\x99\x11\xa5\x11\x20\x15\x69\x67\x5b\xc1\xc5\x02\x3e\x62\x88\x5c\x2d\x05\x53\xc5\xd4\x4d\xba\x14\x14\x30\x21\x8d\xae\x6f\xc5\xd7\x2f\xdf\x77\x33\xe8\xba\x64\x41\xdd\x07\x97\xfc\x25\xcc\x09\x46\x76\x68\x80\x63\x6d\x46\x14\x4b\x7e\x53\x5f\xdd\xc3\x99\x68\xb6\x2c\x05\xf6\xca\x0e\xb1\xfd\xf1\xed\x73\x53\x17\x7b\x81\xf6\x57\x87\x19\xe1\x15\xe2\x61\x51\x97\x73\xb5\xf5\x89\x56\xe4\xe6\x0a\x02\x74\xdf\xae\xfa\xa3\x27\x8f\xad\x20\x3c\xb0\x6d\xe5\x84\x33\x57\x6f\xa4\xc2\xd1\x99\x1e\x99\xfd\x48\xe4\xe3\xc7\xba\xc6\x83\x9c\xbc\xc1\x3b\xe5\x26\x16\x2e\x91\x53\xd2\x6b\x56\x51\x3f\xf3\x36\xeb\x2c\x2e\xbb\xaf\x99\xf0\x45\xab\x95\x73\x8b\x70\x24\xf7\xf1\x06\xe5\x76\x9c\xfe\x1e\xd2\x65\x95\x56\xa5\xd7\x22\x5e\x8b\x76\x4a\x5e\xa9\xc6\x2a\x31\x14\x86\x2a\x2a\x8d\x56\x21\x18\x1d\x3d\xe4\x55\x6d\xf8\x9e\xdd\xa6\x20\xbb\xd1\x4b\x5b\x88\x8d\x68\xfc\x27\xe3\xd4\x2f\x71\x75\xe5\x61\xee\xcf\x0d\x43\x44\x62\xa5\x72\x6e\xd5\x95\xe4\x22\x0e\x4c\x29\x12\x74\x08\x11\xbd\x0c\x92\xb0\x87\xee\x09\x24\x30\xb8\xc2\xa6\xce\x35\xfe\xf3\xd0\xde\x9a\xc0\x42\x27\x4e\x6f\x11\xcb\xbe\xd9\x5f\xfc\xf5\x21\x74\x89\xc8\xd9\x59\xe6\xf3\x4d\x9d\xc1\x3b\xb2\xc0\x5f\xc5\x4f\x83\x4c\x86\xc4\xf6\xa7\x4b\x1f\x02\x37\x34\x6a\x22\x6d\xf7\x3c\xad\x4d\x7d\x02\xd8\x36\x72\xb1\x4b\xc0\x18\x70\xb8\x9e\x74\x6d\x7b\x3c\x94\x41\xdf\x2a\xc9\xe7\x64\x9a\x5a\xfe\xfb\x1e\x37\x75\x96\xa1\xbc\x3d\xa7\xc5\xf9\xf7\xfa\x7c\xfd\x09\x00\x00\xff\xff\x90\xaf\x8c\x9d\xe7\x04\x00\x00")

func templatesUrlNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlNewHtml,
		"templates/url-new.html",
	)
}

func templatesUrlNewHtml() (*asset, error) {
	bytes, err := templatesUrlNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-new.html", size: 1255, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUrlViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\x4b\x0a\x02\x41\x0c\x44\xf7\x9e\x22\x64\xef\x9c\xc4\x95\x9f\x03\x34\x4e\x29\x81\x18\x87\xb1\x44\x61\xe8\xbb\x1b\xbb\x15\x66\xd5\x55\xaf\x8b\x97\x65\x91\x11\x17\x0b\x88\xd2\xe8\x50\xa9\x35\xd9\x70\xda\xef\x86\xe3\x17\xf4\x8e\x18\x33\x6c\x56\xeb\xf3\x3d\x88\xa0\xfe\x30\x71\x9b\xbc\x30\x3f\x9e\xb3\x6f\xa7\x32\xd3\x8a\xab\x04\x5e\x6d\xf8\xa6\x68\x2a\xb5\x89\x45\x0f\x20\x2d\xae\x8f\xec\xff\xd8\x3d\x79\x27\xdf\x4f\x00\x00\x00\xff\xff\xd0\x57\xb0\x99\x95\x00\x00\x00")

func templatesUrlViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUrlViewHtml,
		"templates/url-view.html",
	)
}

func templatesUrlViewHtml() (*asset, error) {
	bytes, err := templatesUrlViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/url-view.html", size: 149, mode: os.FileMode(420), modTime: time.Unix(1455259865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/base.html": templatesBaseHtml,
	"templates/config-base.html": templatesConfigBaseHtml,
	"templates/login.html": templatesLoginHtml,
	"templates/register.html": templatesRegisterHtml,
	"templates/settings.html": templatesSettingsHtml,
	"templates/shitbucket-import.html": templatesShitbucketImportHtml,
	"templates/tag-index.html": templatesTagIndexHtml,
	"templates/url-edit.html": templatesUrlEditHtml,
	"templates/url-index.html": templatesUrlIndexHtml,
	"templates/url-new.html": templatesUrlNewHtml,
	"templates/url-view.html": templatesUrlViewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"base.html": &bintree{templatesBaseHtml, map[string]*bintree{}},
		"config-base.html": &bintree{templatesConfigBaseHtml, map[string]*bintree{}},
		"login.html": &bintree{templatesLoginHtml, map[string]*bintree{}},
		"register.html": &bintree{templatesRegisterHtml, map[string]*bintree{}},
		"settings.html": &bintree{templatesSettingsHtml, map[string]*bintree{}},
		"shitbucket-import.html": &bintree{templatesShitbucketImportHtml, map[string]*bintree{}},
		"tag-index.html": &bintree{templatesTagIndexHtml, map[string]*bintree{}},
		"url-edit.html": &bintree{templatesUrlEditHtml, map[string]*bintree{}},
		"url-index.html": &bintree{templatesUrlIndexHtml, map[string]*bintree{}},
		"url-new.html": &bintree{templatesUrlNewHtml, map[string]*bintree{}},
		"url-view.html": &bintree{templatesUrlViewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

